2023-09-06 14:51:19 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:21)] DEBUG-UrlConfigName:apiUrl.properties
2023-09-06 14:51:19 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:26)] DEBUG-API Url:Beijing
2023-09-06 14:51:20 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:171)] INFO -200 OK
2023-09-06 14:51:20 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:176)] DEBUG-{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:44:32","cityInfo":{"city":"北京市","citykey":"101010100","parent":"北京","updateTime":"14:01"},"data":{"shidu":"60%","pm25":80.0,"pm10":105.0,"quality":"轻度","wendu":"32","ganmao":"儿童、老年人及心脏、呼吸系统疾病患者人群应减少长时间或高强度户外锻炼","forecast":[{"date":"06","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:47","sunset":"18:39","aqi":92,"fx":"南风","fl":"2级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"},{"date":"07","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:48","sunset":"18:37","aqi":92,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:49","sunset":"18:35","aqi":94,"fx":"北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 22℃","low":"低温 20℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:50","sunset":"18:34","aqi":81,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 19℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:51","sunset":"18:32","aqi":67,"fx":"西南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:51","sunset":"18:30","aqi":56,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"12","high":"高温 26℃","low":"低温 20℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:52","sunset":"18:29","aqi":60,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 26℃","low":"低温 19℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:53","sunset":"18:27","aqi":46,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 27℃","low":"低温 19℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:54","sunset":"18:26","aqi":34,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"15","high":"高温 30℃","low":"低温 20℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:55","sunset":"18:24","aqi":43,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:56","sunset":"18:22","aqi":48,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"17","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:57","sunset":"18:21","aqi":52,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"18","high":"高温 25℃","low":"低温 19℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:58","sunset":"18:19","aqi":46,"fx":"东北风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"19","high":"高温 24℃","low":"低温 18℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:59","sunset":"18:17","aqi":50,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"20","high":"高温 25℃","low":"低温 18℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:00","sunset":"18:16","aqi":92,"fx":"东南风","fl":"1级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"}],"yesterday":{"date":"05","high":"高温 33℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:46","sunset":"18:40","aqi":73,"fx":"东南风","fl":"2级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"}}}
2023-09-06 14:51:20 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:28)] DEBUG-Start taskLog Data Conversion
2023-09-06 14:51:20 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:35)] INFO -Crate_JsonObject
2023-09-06 14:51:20 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:37)] INFO -TaskLog:200
2023-09-06 14:51:20 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:43)] INFO -Crate_TaskLog
2023-09-06 14:51:20 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:20 [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:158)] DEBUG-Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-09-06 14:51:20 [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] DEBUG-Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-09-06 14:51:20 [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] DEBUG-Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-09-06 14:51:20 [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] DEBUG-Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390V8] -> [org.hibernate.dialect.DB2390V8Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400V7R3] -> [org.hibernate.dialect.DB2400V7R3Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [HANAColumnStore] -> [org.hibernate.dialect.HANAColumnStoreDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [HANARowStore] -> [org.hibernate.dialect.HANARowStoreDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57] -> [org.hibernate.dialect.MySQL57Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL8] -> [org.hibernate.dialect.MySQL8Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Atomikos] -> [org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.AtomikosJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SapNetWeaver] -> [org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SapNetWeaverJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereLiberty] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
2023-09-06 14:51:20 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
2023-09-06 14:51:20 [org.hibernate.Version.logVersion(Version.java:44)] INFO -HHH000412: Hibernate Core {5.4.11.Final}
2023-09-06 14:51:20 [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] DEBUG-HHH000206: hibernate.properties not found
2023-09-06 14:51:20 [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.locateResourceStream(ClassLoaderServiceImpl.java:182)] TRACE-trying via [new URL("hibernate.cfg.xml")]
2023-09-06 14:51:20 [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.locateResourceStream(ClassLoaderServiceImpl.java:193)] TRACE-trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
2023-09-06 14:51:20 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:35)] TRACE-In resolveEntity(-//Hibernate/Hibernate Configuration DTD//EN, http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd, null, null)
2023-09-06 14:51:20 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:57)] DEBUG-Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-09-06 14:51:20 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:85)] DEBUG-Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-09-06 14:51:20 [org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor.unmarshal(JaxbCfgProcessor.java:116)] DEBUG-cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-09-06 14:51:20 [org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:722)] DEBUG-Building session factory using internal StandardServiceRegistryBuilder
2023-09-06 14:51:20 [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] DEBUG-Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-09-06 14:51:20 [org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:652)] DEBUG-Building session factory using provided StandardServiceRegistry
2023-09-06 14:51:20 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
2023-09-06 14:51:20 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.cache.spi.RegionFactory]
2023-09-06 14:51:20 [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] DEBUG-Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-09-06 14:51:20 [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] DEBUG-Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-09-06 14:51:20 [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:49)] INFO -HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration boolean -> org.hibernate.type.BooleanType@47da3952
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration boolean -> org.hibernate.type.BooleanType@47da3952
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@47da3952
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@495083a0
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b62442c
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration yes_no -> org.hibernate.type.YesNoType@27a5328c
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration byte -> org.hibernate.type.ByteType@1568159
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration byte -> org.hibernate.type.ByteType@1568159
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1568159
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration character -> org.hibernate.type.CharacterType@37f21974
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration char -> org.hibernate.type.CharacterType@37f21974
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37f21974
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration short -> org.hibernate.type.ShortType@303e3593
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration short -> org.hibernate.type.ShortType@303e3593
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Short -> org.hibernate.type.ShortType@303e3593
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration integer -> org.hibernate.type.IntegerType@10c8f62
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration int -> org.hibernate.type.IntegerType@10c8f62
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10c8f62
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration long -> org.hibernate.type.LongType@5fb97279
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration long -> org.hibernate.type.LongType@5fb97279
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fb97279
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration float -> org.hibernate.type.FloatType@32cb636e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration float -> org.hibernate.type.FloatType@32cb636e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Float -> org.hibernate.type.FloatType@32cb636e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration double -> org.hibernate.type.DoubleType@62dae245
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration double -> org.hibernate.type.DoubleType@62dae245
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62dae245
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3954d008
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3954d008
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64bc21ac
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64bc21ac
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration string -> org.hibernate.type.StringType@2f162cc0
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.String -> org.hibernate.type.StringType@2f162cc0
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f69d591
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@403132fc
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration url -> org.hibernate.type.UrlType@3a1d593e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a1d593e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Duration -> org.hibernate.type.DurationType@314b8f2d
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.Duration -> org.hibernate.type.DurationType@314b8f2d
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Instant -> org.hibernate.type.InstantType@4a3e3e8b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a3e3e8b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c9168dc
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c9168dc
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5217f3d0
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5217f3d0
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6e9319f
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6e9319f
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5db4c359
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5db4c359
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fefce9e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fefce9e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration date -> org.hibernate.type.DateType@b672aa8
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Date -> org.hibernate.type.DateType@b672aa8
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration time -> org.hibernate.type.TimeType@29cfd92b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29cfd92b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration timestamp -> org.hibernate.type.TimestampType@55f3c410
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55f3c410
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55f3c410
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4a8ab068
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration calendar -> org.hibernate.type.CalendarType@644c78d4
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@644c78d4
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@644c78d4
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7bb3a9fe
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@f19c9d2
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration locale -> org.hibernate.type.LocaleType@4fd4cae3
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fd4cae3
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration currency -> org.hibernate.type.CurrencyType@2baa8d82
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2baa8d82
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b52c0d6
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b52c0d6
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration class -> org.hibernate.type.ClassType@7de0c6ae
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7de0c6ae
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c36250e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c36250e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@299266e2
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration binary -> org.hibernate.type.BinaryType@66971f6b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration byte[] -> org.hibernate.type.BinaryType@66971f6b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [B -> org.hibernate.type.BinaryType@66971f6b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5990e6c5
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5990e6c5
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5990e6c5
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration row_version -> org.hibernate.type.RowVersionType@12cd9150
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration image -> org.hibernate.type.ImageType@cf65451
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration characters -> org.hibernate.type.CharArrayType@64da2a7
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration char[] -> org.hibernate.type.CharArrayType@64da2a7
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [C -> org.hibernate.type.CharArrayType@64da2a7
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b9d6699
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b9d6699
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b9d6699
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration text -> org.hibernate.type.TextType@72b16078
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration ntext -> org.hibernate.type.NTextType@1b0a7baf
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration blob -> org.hibernate.type.BlobType@53499d85
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@53499d85
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46c670a6
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration clob -> org.hibernate.type.ClobType@355e34c7
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@355e34c7
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration nclob -> org.hibernate.type.NClobType@48c40605
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48c40605
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@476aac9
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f2bf0e2
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration serializable -> org.hibernate.type.SerializableType@363f6148
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration object -> org.hibernate.type.ObjectType@4a9e6faf
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a9e6faf
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@459f7aa3
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7cc586a8
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7db534f2
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@44a2b17b
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a56812e
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a76b80a
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7eb01b12
2023-09-06 14:51:20 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f4854d6
2023-09-06 14:51:20 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
2023-09-06 14:51:20 [org.hibernate.boot.spi.XmlMappingBinderAccess.bind(XmlMappingBinderAccess.java:51)] TRACE-reading mappings from resource : TaskLogEntity.hbm.xml
2023-09-06 14:51:20 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:35)] TRACE-In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd, null, null)
2023-09-06 14:51:20 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:57)] DEBUG-Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2023-09-06 14:51:20 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:59)] DEBUG-Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
2023-09-06 14:51:21 [org.hibernate.boot.jaxb.internal.MappingBinder.doBind(MappingBinder.java:59)] DEBUG-Performing JAXB binding of hbm.xml document : Origin(name=TaskLogEntity.hbm.xml,type=RESOURCE)
2023-09-06 14:51:21 [org.hibernate.boot.spi.XmlMappingBinderAccess.bind(XmlMappingBinderAccess.java:51)] TRACE-reading mappings from resource : WeatherInfoEntity.hbm.xml
2023-09-06 14:51:21 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:35)] TRACE-In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd, null, null)
2023-09-06 14:51:21 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:57)] DEBUG-Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2023-09-06 14:51:21 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:59)] DEBUG-Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
2023-09-06 14:51:21 [org.hibernate.boot.jaxb.internal.MappingBinder.doBind(MappingBinder.java:59)] DEBUG-Performing JAXB binding of hbm.xml document : Origin(name=WeatherInfoEntity.hbm.xml,type=RESOURCE)
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-09-06 14:51:21 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.instantiateC3p0Provider(ConnectionProviderInitiator.java:272)] WARN -HHH000022: c3p0 properties were encountered, but the c3p0 provider class was not found on the classpath; these properties are going to be ignored.
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] WARN -HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] INFO -HHH10001005: using driver [com.microsoft.sqlserver.jdbc.SQLServerDriver] at URL [jdbc:sqlserver://localhost:1433;database=task;integratedSecurity=false;encrypt=true;trustServerCertificate=true;]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] INFO -HHH10001001: Connection properties: {user=test, password=test}
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] INFO -HHH10001003: Autocommit mode: false
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] DEBUG-Initializing Connection pool with 1 Connections
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249)] INFO -HHH000115: Hibernate connection pool size: 20 (min=1)
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] DEBUG-Database ->
       name : Microsoft SQL Server
    version : 15.00.2101
      major : 15
      minor : 0
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] DEBUG-Driver ->
       name : Microsoft JDBC Driver 12.2 for SQL Server
    version : 12.2.0.0
      major : 12
      minor : 2
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] DEBUG-JDBC version : 4.2
2023-09-06 14:51:21 [org.hibernate.dialect.Dialect.<init>(Dialect.java:172)] INFO -HHH000400: Using dialect: org.hibernate.dialect.SQLServerDialect
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:187)] DEBUG-IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [task]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [dbo]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
2023-09-06 14:51:21 [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] DEBUG-Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-09-06 14:51:21 [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:152)] DEBUG-Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f13be1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5f303ecd]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder.indexMappingDocument(EntityHierarchyBuilder.java:89)] TRACE-Indexing mapping document [Origin(name=TaskLogEntity.hbm.xml,type=RESOURCE)] for purpose of building entity hierarchy ordering
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder.indexMappingDocument(EntityHierarchyBuilder.java:89)] TRACE-Indexing mapping document [Origin(name=WeatherInfoEntity.hbm.xml,type=RESOURCE)] for purpose of building entity hierarchy ordering
2023-09-06 14:51:21 [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addImport(InFlightMetadataCollectorImpl.java:725)] TRACE-Import: com.eland.weatherData.model.TaskLogEntity -> com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addImport(InFlightMetadataCollectorImpl.java:725)] TRACE-Import: TaskLogEntity -> com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [task]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [dbo]
2023-09-06 14:51:21 [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] DEBUG-Created database namespace [logicalName=Name{catalog=task, schema=dbo}, physicalName=Name{catalog=task, schema=dbo}]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [task_log]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindRootEntity(ModelBinder.java:238)] DEBUG-Mapping class: com.eland.weatherData.model.TaskLogEntity -> task_log
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [id]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: id -> [id]
2023-09-06 14:51:21 [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] DEBUG-Forcing column [id] to be non-null as it is part of the primary key for table [task_log]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [city]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: city -> [city]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [update_time]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: updateTime -> [update_time]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [status]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: status -> [status]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [machine_name]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: machineName -> [machine_name]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [message]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: message -> [message]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [json_txt]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: jsonTxt -> [json_txt]
2023-09-06 14:51:21 [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addImport(InFlightMetadataCollectorImpl.java:725)] TRACE-Import: com.eland.weatherData.model.WeatherInfoEntity -> com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addImport(InFlightMetadataCollectorImpl.java:725)] TRACE-Import: WeatherInfoEntity -> com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [weather]
2023-09-06 14:51:21 [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] DEBUG-Created database namespace [logicalName=Name{catalog=null, schema=weather}, physicalName=Name{catalog=null, schema=weather}]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [weather_info]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindRootEntity(ModelBinder.java:238)] DEBUG-Mapping class: com.eland.weatherData.model.WeatherInfoEntity -> weather_info
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [id]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: id -> [id]
2023-09-06 14:51:21 [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] DEBUG-Forcing column [id] to be non-null as it is part of the primary key for table [weather_info]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [city]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: city -> [city]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [date]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: date -> [date]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [sunrise]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: sunrise -> [sunrise]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [high]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: high -> [high]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [low]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: low -> [low]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [sunset]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: sunset -> [sunset]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [aqi]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: aqi -> [aqi]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [fx]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: fx -> [fx]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [fl]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: fl -> [fl]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [type]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: type -> [type]
2023-09-06 14:51:21 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [notice]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: notice -> [notice]
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:250)] DEBUG-Skipping annotated class processing of entity [com.eland.weatherData.model.TaskLogEntity], as it has already been processed
2023-09-06 14:51:21 [org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:250)] DEBUG-Skipping annotated class processing of entity [com.eland.weatherData.model.WeatherInfoEntity], as it has already been processed
2023-09-06 14:51:21 [org.hibernate.loader.BatchFetchStyle.interpret(BatchFetchStyle.java:51)] TRACE-Interpreting BatchFetchStyle from setting : null
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
2023-09-06 14:51:21 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:201)] DEBUG-Building session factory
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:68)] DEBUG-SessionFactory name : null
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:69)] DEBUG-Automatic flush during beforeCompletion(): enabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:70)] DEBUG-Automatic session close at end of transaction: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:72)] DEBUG-Statistics: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:74)] DEBUG-Deleted entity synthetic identifier rollback: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:75)] DEBUG-Default entity-mode: pojo
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:76)] DEBUG-Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:77)] DEBUG-Allow initialization of lazy state outside session : disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:79)] DEBUG-Using BatchFetchStyle : LEGACY
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:80)] DEBUG-Default batch fetch size: -1
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:81)] DEBUG-Maximum outer join fetch depth: null
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:82)] DEBUG-Default null ordering: NONE
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:83)] DEBUG-Order SQL updates by primary key: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:84)] DEBUG-Order SQL inserts for batching: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:86)] DEBUG-multi-tenancy strategy : NONE
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:88)] DEBUG-JTA Track by Thread: enabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:90)] DEBUG-Query language substitutions: {}
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:91)] DEBUG-Named query checking : enabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:93)] DEBUG-Second-level cache: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:94)] DEBUG-Second-level query cache: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:95)] DEBUG-Second-level query cache factory: null
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:96)] DEBUG-Second-level cache region prefix: null
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:97)] DEBUG-Optimize second-level cache for minimal puts: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:98)] DEBUG-Structured second-level cache entries: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:99)] DEBUG-Second-level cache direct-reference entries: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:100)] DEBUG-Automatic eviction of collection cache: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:102)] DEBUG-JDBC batch size: 0
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:103)] DEBUG-JDBC batch updates for versioned data: enabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:104)] DEBUG-Scrollable result sets: enabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:105)] DEBUG-Wrap result sets: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:106)] DEBUG-JDBC3 getGeneratedKeys(): enabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:107)] DEBUG-JDBC result set fetch size: null
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:108)] DEBUG-Connection release mode: AFTER_TRANSACTION
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:109)] DEBUG-Generate SQL with comments: disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:111)] DEBUG-JPA compliance - query : disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:112)] DEBUG-JPA compliance - closed-handling : disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:113)] DEBUG-JPA compliance - lists : disabled
2023-09-06 14:51:21 [org.hibernate.cfg.Settings.<init>(Settings.java:114)] DEBUG-JPA compliance - transactions : disabled
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
2023-09-06 14:51:21 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] DEBUG-Session factory constructed with filter configurations : {}
2023-09-06 14:51:21 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:257)] DEBUG-Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, c3p0.initialPoolSize=1, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=120, sun.jnu.encoding=MS950, hibernate.dialect=org.hibernate.dialect.SQLServerDialect, hibernate.c3p0.min_size=1, java.class.path=C:\Program Files\Java\jdk-1.8\jre\lib\charsets.jar;C:\Program Files\Java\jdk-1.8\jre\lib\deploy.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk-1.8\jre\lib\javaws.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jce.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jfr.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jsse.jar;C:\Program Files\Java\jdk-1.8\jre\lib\management-agent.jar;C:\Program Files\Java\jdk-1.8\jre\lib\plugin.jar;C:\Program Files\Java\jdk-1.8\jre\lib\resources.jar;C:\Program Files\Java\jdk-1.8\jre\lib\rt.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\out\production\WeatherDataAccess;C:\Users\weichiehhsu\Documents\commonLib\gson-2.8.5.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\jna-5.12.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\rxjava-3.1.5.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\rxjava-2.2.21.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-h2-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\slf4j-api-1.7.36.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\commons-cli-1.5.0.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\jna-platform-5.12.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-win-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-testing-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-reactive-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\reactive-streams-1.0.4.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-cache-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-fluent-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-testing-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\slf4j-jdk14-1.7.9.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\javax.persistence-api-2.2.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\istack-commons-runtime-3.0.7.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\antlr-2.7.7.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\javax.activation-api-1.2.0.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\byte-buddy-1.10.7.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jaxb-runtime-2.3.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jboss-logging-3.3.2.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jandex-2.1.1.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\FastInfoset-1.2.15.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jaxb-api-2.3.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\classmate-1.5.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\javassist-3.24.0-GA.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\dom4j-2.1.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\stax-ex-1.8.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\txw2-2.3.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\hibernate-core-5.4.11.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\mssql-jdbc-12.2.0.jre8.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\mysql-connector-java-8.0.28.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\log4j-core-2.20.0.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\log4j-api-2.20.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.4\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Taipei, os.name=Windows 11, java.vm.specification.version=1.8, hibernate.c3p0.acquire_increment=5, sun.java.launcher=SUN_STANDARD, user.country=TW, sun.boot.library.path=C:\Program Files\Java\jdk-1.8\jre\bin, sun.java.command=com.eland.weatherData.weatherDataAccessMain apiUrl.properties, sun.cpu.endian=little, user.home=C:\Users\weichiehhsu, hibernate.c3p0.max_statements=10, user.language=zh, java.specification.vendor=Oracle Corporation, c3p0.max_statements=10, java.home=C:\Program Files\Java\jdk-1.8\jre, c3p0.min_size=1, file.separator=\, line.separator=
, hibernate.c3p0.timeout=120, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, c3p0.max_size=5, c3p0.timeout=120, sun.boot.class.path=C:\Program Files\Java\jdk-1.8\jre\lib\resources.jar;C:\Program Files\Java\jdk-1.8\jre\lib\rt.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jsse.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jce.jar;C:\Program Files\Java\jdk-1.8\jre\lib\charsets.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jfr.jar;C:\Program Files\Java\jdk-1.8\jre\classes, user.script=, connection.password=test, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=5, java.runtime.version=1.8.0_381-b09, user.name=weichiehhsu, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk-1.8\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:sqlserver://localhost:1433;database=task;integratedSecurity=false;encrypt=true;trustServerCertificate=true;, file.encoding=UTF-8, format_sql=true, c3p0.acquire_increment=5, hibernate.c3p0.initialPoolSize=1, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, c3p0.idle_test_period=120, show_sql=true, hibernate.connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\WEICHI~1\AppData\Local\Temp\, java.version=1.8.0_381, user.dir=C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess, os.arch=amd64, connection.username=test, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.microsoft.sqlserver.jdbc.SQLServerDriver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3874b815, java.library.path=C:\Program Files\Java\jdk-1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Java\jdk-1.8\bin;C:\apache-tomcat-9.0.78\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\weichiehhsu\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.4\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\weichiehhsu\AppData\Roaming\npm;C:\Users\weichiehhsu\AppData\Local\Programs\Microsoft VS Code\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.381-b09, java.specification.maintenance.version=5, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk-1.8\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, connection.url=jdbc:sqlserver://localhost:1433;database=task;integratedSecurity=false;encrypt=true;trustServerCertificate=true;, java.class.version=52.0}
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
2023-09-06 14:51:21 [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] DEBUG-Skipping JACC integration as it was not enabled
2023-09-06 14:51:21 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:296)] DEBUG-Instantiated session factory
2023-09-06 14:51:21 [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:157)] DEBUG-Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5f13be1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4c59e45e]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] DEBUG-Not known whether passed class name [com.eland.weatherData.model.TaskLogEntity] is safe
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] DEBUG-No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] DEBUG-Not known whether passed class name [com.eland.weatherData.model.TaskLogEntity] is safe
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] DEBUG-No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [updateTime], existing type = [org.hibernate.type.TimestampType@55f3c410], incoming type = [org.hibernate.type.TimestampType@55f3c410]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [status], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [machineName], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [message], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [jsonTxt], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] DEBUG-Not known whether passed class name [com.eland.weatherData.model.WeatherInfoEntity] is safe
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] DEBUG-No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] DEBUG-Not known whether passed class name [com.eland.weatherData.model.WeatherInfoEntity] is safe
2023-09-06 14:51:21 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] DEBUG-No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [date], existing type = [org.hibernate.type.TimestampType@55f3c410], incoming type = [org.hibernate.type.TimestampType@55f3c410]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [sunrise], existing type = [org.hibernate.type.TimeType@29cfd92b], incoming type = [org.hibernate.type.TimeType@29cfd92b]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [high], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [low], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [sunset], existing type = [org.hibernate.type.TimeType@29cfd92b], incoming type = [org.hibernate.type.TimeType@29cfd92b]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [aqi], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [fx], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [fl], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [notice], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3855)] DEBUG-Static SQL for entity: com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3860)] DEBUG- Version select: select id from task.dbo.task_log where id =?
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3863)] DEBUG- Snapshot select: select tasklogent_.id, tasklogent_.city as city2_0_, tasklogent_.update_time as update_t3_0_, tasklogent_.status as status4_0_, tasklogent_.machine_name as machine_5_0_, tasklogent_.message as message6_0_, tasklogent_.json_txt as json_txt7_0_ from task.dbo.task_log tasklogent_ where tasklogent_.id=?
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Insert 0: insert into task.dbo.task_log (city, update_time, status, machine_name, message, json_txt, id) values (?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Update 0: update task.dbo.task_log set city=?, update_time=?, status=?, machine_name=?, message=?, json_txt=? where id=?
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Delete 0: delete from task.dbo.task_log where id=?
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3871)] DEBUG- Identity insert: insert into task.dbo.task_log (city, update_time, status, machine_name, message, json_txt) values (?, ?, ?, ?, ?, ?)
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:172)] TRACE- Starting root entity : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] DEBUG-Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f481b73]
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.pushToStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:113)] TRACE-Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4996c99
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.associationKeyRegistered(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:648)] TRACE-.. Registering AssociationKey : AssociationKey(table=task.dbo.task_log, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4996c99
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:239)] TRACE->> Starting entity identifier : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : city
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : updateTime
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=updateTime, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=updateTime, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : status
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=status, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=status, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : machineName
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=machineName, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=machineName, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : message
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=message, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=message, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : jsonTxt
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=jsonTxt, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=jsonTxt, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.popFromStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:120)] TRACE-Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4996c99
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:208)] TRACE- Finished root entity : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150)] DEBUG-Building LoadPlan...
2023-09-06 14:51:21 [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] DEBUG-processing queryspace <gen:0>
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] DEBUG-LoadPlan(entity=com.eland.weatherData.model.TaskLogEntity)
    - Returns
       - EntityReturnImpl(entity=com.eland.weatherData.model.TaskLogEntity, querySpaceUid=<gen:0>, path=com.eland.weatherData.model.TaskLogEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.eland.weatherData.model.TaskLogEntity)
          - SQL table alias mapping - tasklogent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2023-09-06 14:51:21 [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:137)] DEBUG-Static select for entity com.eland.weatherData.model.TaskLogEntity [NONE]: select tasklogent0_.id as id1_0_0_, tasklogent0_.city as city2_0_0_, tasklogent0_.update_time as update_t3_0_0_, tasklogent0_.status as status4_0_0_, tasklogent0_.machine_name as machine_5_0_0_, tasklogent0_.message as message6_0_0_, tasklogent0_.json_txt as json_txt7_0_0_ from task.dbo.task_log tasklogent0_ where tasklogent0_.id=?
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:172)] TRACE- Starting root entity : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] DEBUG-Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e645fbd]
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.pushToStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:113)] TRACE-Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@574a89e2
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.associationKeyRegistered(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:648)] TRACE-.. Registering AssociationKey : AssociationKey(table=task.dbo.task_log, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@574a89e2
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:239)] TRACE->> Starting entity identifier : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : city
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : updateTime
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=updateTime, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=updateTime, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : status
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=status, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=status, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : machineName
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=machineName, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=machineName, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : message
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=message, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=message, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : jsonTxt
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=jsonTxt, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=jsonTxt, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.popFromStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:120)] TRACE-Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@574a89e2
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:208)] TRACE- Finished root entity : com.eland.weatherData.model.TaskLogEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150)] DEBUG-Building LoadPlan...
2023-09-06 14:51:21 [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] DEBUG-processing queryspace <gen:0>
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] DEBUG-LoadPlan(entity=com.eland.weatherData.model.TaskLogEntity)
    - Returns
       - EntityReturnImpl(entity=com.eland.weatherData.model.TaskLogEntity, querySpaceUid=<gen:0>, path=com.eland.weatherData.model.TaskLogEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.eland.weatherData.model.TaskLogEntity)
          - SQL table alias mapping - tasklogent0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2023-09-06 14:51:21 [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:137)] DEBUG-Static select for entity com.eland.weatherData.model.TaskLogEntity [READ]: select tasklogent0_.id as id1_0_0_, tasklogent0_.city as city2_0_0_, tasklogent0_.update_time as update_t3_0_0_, tasklogent0_.status as status4_0_0_, tasklogent0_.machine_name as machine_5_0_0_, tasklogent0_.message as message6_0_0_, tasklogent0_.json_txt as json_txt7_0_0_ from task.dbo.task_log tasklogent0_ where tasklogent0_.id=?
2023-09-06 14:51:21 [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] DEBUG-Static select for action ACTION_MERGE on entity com.eland.weatherData.model.TaskLogEntity: select tasklogent0_.id as id1_0_0_, tasklogent0_.city as city2_0_0_, tasklogent0_.update_time as update_t3_0_0_, tasklogent0_.status as status4_0_0_, tasklogent0_.machine_name as machine_5_0_0_, tasklogent0_.message as message6_0_0_, tasklogent0_.json_txt as json_txt7_0_0_ from task.dbo.task_log tasklogent0_ where tasklogent0_.id=?
2023-09-06 14:51:21 [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] DEBUG-Static select for action ACTION_REFRESH on entity com.eland.weatherData.model.TaskLogEntity: select tasklogent0_.id as id1_0_0_, tasklogent0_.city as city2_0_0_, tasklogent0_.update_time as update_t3_0_0_, tasklogent0_.status as status4_0_0_, tasklogent0_.machine_name as machine_5_0_0_, tasklogent0_.message as message6_0_0_, tasklogent0_.json_txt as json_txt7_0_0_ from task.dbo.task_log tasklogent0_ where tasklogent0_.id=?
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3855)] DEBUG-Static SQL for entity: com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3860)] DEBUG- Version select: select id from weather.weather_info where id =?
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3863)] DEBUG- Snapshot select: select weatherinf_.id, weatherinf_.city as city2_1_, weatherinf_.date as date3_1_, weatherinf_.sunrise as sunrise4_1_, weatherinf_.high as high5_1_, weatherinf_.low as low6_1_, weatherinf_.sunset as sunset7_1_, weatherinf_.aqi as aqi8_1_, weatherinf_.fx as fx9_1_, weatherinf_.fl as fl10_1_, weatherinf_.type as type11_1_, weatherinf_.notice as notice12_1_ from weather.weather_info weatherinf_ where weatherinf_.id=?
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Insert 0: insert into weather.weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Update 0: update weather.weather_info set city=?, date=?, sunrise=?, high=?, low=?, sunset=?, aqi=?, fx=?, fl=?, type=?, notice=? where id=?
2023-09-06 14:51:21 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Delete 0: delete from weather.weather_info where id=?
2023-09-06 14:51:21 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3871)] DEBUG- Identity insert: insert into weather.weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:172)] TRACE- Starting root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] DEBUG-Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d64160c]
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.pushToStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:113)] TRACE-Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5f254608
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.associationKeyRegistered(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:648)] TRACE-.. Registering AssociationKey : AssociationKey(table=weather.weather_info, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5f254608
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:239)] TRACE->> Starting entity identifier : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : city
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : date
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunrise
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : high
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : low
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunset
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : aqi
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fx
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fl
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : type
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : notice
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.popFromStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:120)] TRACE-Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5f254608
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:208)] TRACE- Finished root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150)] DEBUG-Building LoadPlan...
2023-09-06 14:51:21 [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] DEBUG-processing queryspace <gen:0>
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] DEBUG-LoadPlan(entity=com.eland.weatherData.model.WeatherInfoEntity)
    - Returns
       - EntityReturnImpl(entity=com.eland.weatherData.model.WeatherInfoEntity, querySpaceUid=<gen:0>, path=com.eland.weatherData.model.WeatherInfoEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.eland.weatherData.model.WeatherInfoEntity)
          - SQL table alias mapping - weatherinf0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2023-09-06 14:51:21 [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:137)] DEBUG-Static select for entity com.eland.weatherData.model.WeatherInfoEntity [NONE]: select weatherinf0_.id as id1_1_0_, weatherinf0_.city as city2_1_0_, weatherinf0_.date as date3_1_0_, weatherinf0_.sunrise as sunrise4_1_0_, weatherinf0_.high as high5_1_0_, weatherinf0_.low as low6_1_0_, weatherinf0_.sunset as sunset7_1_0_, weatherinf0_.aqi as aqi8_1_0_, weatherinf0_.fx as fx9_1_0_, weatherinf0_.fl as fl10_1_0_, weatherinf0_.type as type11_1_0_, weatherinf0_.notice as notice12_1_0_ from weather.weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:172)] TRACE- Starting root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] DEBUG-Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eeb0f9b]
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.pushToStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:113)] TRACE-Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b1c538d
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.associationKeyRegistered(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:648)] TRACE-.. Registering AssociationKey : AssociationKey(table=weather.weather_info, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b1c538d
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:239)] TRACE->> Starting entity identifier : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : city
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : date
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunrise
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : high
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : low
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunset
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : aqi
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fx
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fl
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : type
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : notice
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.popFromStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:120)] TRACE-Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1b1c538d
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:208)] TRACE- Finished root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150)] DEBUG-Building LoadPlan...
2023-09-06 14:51:21 [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] DEBUG-processing queryspace <gen:0>
2023-09-06 14:51:21 [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] DEBUG-LoadPlan(entity=com.eland.weatherData.model.WeatherInfoEntity)
    - Returns
       - EntityReturnImpl(entity=com.eland.weatherData.model.WeatherInfoEntity, querySpaceUid=<gen:0>, path=com.eland.weatherData.model.WeatherInfoEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.eland.weatherData.model.WeatherInfoEntity)
          - SQL table alias mapping - weatherinf0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2023-09-06 14:51:21 [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:137)] DEBUG-Static select for entity com.eland.weatherData.model.WeatherInfoEntity [READ]: select weatherinf0_.id as id1_1_0_, weatherinf0_.city as city2_1_0_, weatherinf0_.date as date3_1_0_, weatherinf0_.sunrise as sunrise4_1_0_, weatherinf0_.high as high5_1_0_, weatherinf0_.low as low6_1_0_, weatherinf0_.sunset as sunset7_1_0_, weatherinf0_.aqi as aqi8_1_0_, weatherinf0_.fx as fx9_1_0_, weatherinf0_.fl as fl10_1_0_, weatherinf0_.type as type11_1_0_, weatherinf0_.notice as notice12_1_0_ from weather.weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:21 [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] DEBUG-Static select for action ACTION_MERGE on entity com.eland.weatherData.model.WeatherInfoEntity: select weatherinf0_.id as id1_1_0_, weatherinf0_.city as city2_1_0_, weatherinf0_.date as date3_1_0_, weatherinf0_.sunrise as sunrise4_1_0_, weatherinf0_.high as high5_1_0_, weatherinf0_.low as low6_1_0_, weatherinf0_.sunset as sunset7_1_0_, weatherinf0_.aqi as aqi8_1_0_, weatherinf0_.fx as fx9_1_0_, weatherinf0_.fl as fl10_1_0_, weatherinf0_.type as type11_1_0_, weatherinf0_.notice as notice12_1_0_ from weather.weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:21 [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] DEBUG-Static select for action ACTION_REFRESH on entity com.eland.weatherData.model.WeatherInfoEntity: select weatherinf0_.id as id1_1_0_, weatherinf0_.city as city2_1_0_, weatherinf0_.date as date3_1_0_, weatherinf0_.sunrise as sunrise4_1_0_, weatherinf0_.high as high5_1_0_, weatherinf0_.low as low6_1_0_, weatherinf0_.sunset as sunset7_1_0_, weatherinf0_.aqi as aqi8_1_0_, weatherinf0_.fx as fx9_1_0_, weatherinf0_.fl as fl10_1_0_, weatherinf0_.type as type11_1_0_, weatherinf0_.notice as notice12_1_0_ from weather.weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:21 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:204)] TRACE-Wrapping up metadata context...
2023-09-06 14:51:21 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:216)] TRACE-Starting entity [com.eland.weatherData.model.TaskLogEntity]
2023-09-06 14:51:21 [org.hibernate.metamodel.internal.AttributeFactory.buildIdAttribute(AttributeFactory.java:137)] TRACE-Building identifier attribute [TaskLogEntity.id]
2023-09-06 14:51:21 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [id]
2023-09-06 14:51:21 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public int com.eland.weatherData.model.TaskLogEntity.getId()]
2023-09-06 14:51:21 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [TaskLogEntity.city]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [city]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.TaskLogEntity.getCity()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [TaskLogEntity.updateTime]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [updateTime]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.util.Date com.eland.weatherData.model.TaskLogEntity.getUpdateTime()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=timestamp, class=org.hibernate.type.TimestampType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [TaskLogEntity.status]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [status]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public int com.eland.weatherData.model.TaskLogEntity.getStatus()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [TaskLogEntity.machineName]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [machineName]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.TaskLogEntity.getMachineName()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [TaskLogEntity.message]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [message]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.TaskLogEntity.getMessage()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [TaskLogEntity.jsonTxt]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [jsonTxt]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.TaskLogEntity.getJsonTxt()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:251)] TRACE-Completed entity [com.eland.weatherData.model.TaskLogEntity]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:216)] TRACE-Starting entity [com.eland.weatherData.model.WeatherInfoEntity]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildIdAttribute(AttributeFactory.java:137)] TRACE-Building identifier attribute [WeatherInfoEntity.id]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [id]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public int com.eland.weatherData.model.WeatherInfoEntity.getId()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.city]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [city]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getCity()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.date]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [date]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.util.Date com.eland.weatherData.model.WeatherInfoEntity.getDate()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=timestamp, class=org.hibernate.type.TimestampType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.sunrise]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [sunrise]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.sql.Time com.eland.weatherData.model.WeatherInfoEntity.getSunrise()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=time, class=org.hibernate.type.TimeType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.high]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [high]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.Integer com.eland.weatherData.model.WeatherInfoEntity.getHigh()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.low]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [low]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.Integer com.eland.weatherData.model.WeatherInfoEntity.getLow()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.sunset]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [sunset]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.sql.Time com.eland.weatherData.model.WeatherInfoEntity.getSunset()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=time, class=org.hibernate.type.TimeType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.aqi]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [aqi]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getAqi()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.fx]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [fx]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getFx()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.fl]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [fl]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.Integer com.eland.weatherData.model.WeatherInfoEntity.getFl()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.type]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [type]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getType()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.notice]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [notice]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getNotice()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:251)] TRACE-Completed entity [com.eland.weatherData.model.WeatherInfoEntity]
2023-09-06 14:51:22 [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:57)] DEBUG-No actions specified; doing nothing
2023-09-06 14:51:22 [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:151)] DEBUG-Checking 0 named HQL queries
2023-09-06 14:51:22 [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:167)] DEBUG-Checking 0 named SQL queries
2023-09-06 14:51:22 [org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated(TypeConfiguration.java:205)] TRACE-Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4c59e45e] for TypeConfiguration
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] DEBUG-Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d7109be
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] DEBUG-Registering SessionFactory: 54b17bba-2e3d-4359-a4f4-4a6680c57bf9 (<unnamed>)
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] DEBUG-Not binding SessionFactory to JNDI, no JNDI name configured
2023-09-06 14:51:22 [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] DEBUG-Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-09-06 14:51:22 [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] DEBUG-Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-09-06 14:51:22 [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] DEBUG-Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390V8] -> [org.hibernate.dialect.DB2390V8Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400V7R3] -> [org.hibernate.dialect.DB2400V7R3Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [HANAColumnStore] -> [org.hibernate.dialect.HANAColumnStoreDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [HANARowStore] -> [org.hibernate.dialect.HANARowStoreDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57] -> [org.hibernate.dialect.MySQL57Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL8] -> [org.hibernate.dialect.MySQL8Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Atomikos] -> [org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.AtomikosJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.AtomikosJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SapNetWeaver] -> [org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SapNetWeaverJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SapNetWeaverJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereLiberty] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [default] -> [org.hibernate.cache.internal.DefaultCacheKeysFactory]
2023-09-06 14:51:22 [org.hibernate.boot.registry.selector.internal.StrategySelectorImpl.registerStrategyImplementor(StrategySelectorImpl.java:70)] TRACE-Registering named strategy selector [org.hibernate.cache.spi.CacheKeysFactory] : [simple] -> [org.hibernate.cache.internal.SimpleCacheKeysFactory]
2023-09-06 14:51:22 [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.locateResourceStream(ClassLoaderServiceImpl.java:182)] TRACE-trying via [new URL("mysql.cfg.xml")]
2023-09-06 14:51:22 [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.locateResourceStream(ClassLoaderServiceImpl.java:193)] TRACE-trying via [ClassLoader.getResourceAsStream("mysql.cfg.xml")]
2023-09-06 14:51:22 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:35)] TRACE-In resolveEntity(-//Hibernate/Hibernate Configuration DTD//EN, http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd, null, null)
2023-09-06 14:51:22 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:57)] DEBUG-Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-09-06 14:51:22 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:85)] DEBUG-Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-09-06 14:51:22 [org.hibernate.boot.cfgxml.internal.JaxbCfgProcessor.unmarshal(JaxbCfgProcessor.java:116)] DEBUG-cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-09-06 14:51:22 [org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:722)] DEBUG-Building session factory using internal StandardServiceRegistryBuilder
2023-09-06 14:51:22 [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] DEBUG-Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-09-06 14:51:22 [org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:652)] DEBUG-Building session factory using provided StandardServiceRegistry
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.cache.spi.RegionFactory]
2023-09-06 14:51:22 [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] DEBUG-Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-09-06 14:51:22 [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] DEBUG-Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration boolean -> org.hibernate.type.BooleanType@47da3952
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration boolean -> org.hibernate.type.BooleanType@47da3952
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@47da3952
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@495083a0
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b62442c
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration yes_no -> org.hibernate.type.YesNoType@27a5328c
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration byte -> org.hibernate.type.ByteType@1568159
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration byte -> org.hibernate.type.ByteType@1568159
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1568159
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration character -> org.hibernate.type.CharacterType@37f21974
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration char -> org.hibernate.type.CharacterType@37f21974
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37f21974
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration short -> org.hibernate.type.ShortType@303e3593
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration short -> org.hibernate.type.ShortType@303e3593
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Short -> org.hibernate.type.ShortType@303e3593
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration integer -> org.hibernate.type.IntegerType@10c8f62
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration int -> org.hibernate.type.IntegerType@10c8f62
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@10c8f62
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration long -> org.hibernate.type.LongType@5fb97279
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration long -> org.hibernate.type.LongType@5fb97279
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Long -> org.hibernate.type.LongType@5fb97279
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration float -> org.hibernate.type.FloatType@32cb636e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration float -> org.hibernate.type.FloatType@32cb636e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Float -> org.hibernate.type.FloatType@32cb636e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration double -> org.hibernate.type.DoubleType@62dae245
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration double -> org.hibernate.type.DoubleType@62dae245
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62dae245
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3954d008
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3954d008
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration big_integer -> org.hibernate.type.BigIntegerType@64bc21ac
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@64bc21ac
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration string -> org.hibernate.type.StringType@2f162cc0
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.String -> org.hibernate.type.StringType@2f162cc0
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f69d591
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@403132fc
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration url -> org.hibernate.type.UrlType@3a1d593e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a1d593e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Duration -> org.hibernate.type.DurationType@314b8f2d
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.Duration -> org.hibernate.type.DurationType@314b8f2d
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Instant -> org.hibernate.type.InstantType@4a3e3e8b
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a3e3e8b
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c9168dc
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c9168dc
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5217f3d0
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5217f3d0
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6e9319f
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6e9319f
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1fc0053e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5db4c359
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5db4c359
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fefce9e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6fefce9e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration date -> org.hibernate.type.DateType@b672aa8
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Date -> org.hibernate.type.DateType@b672aa8
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration time -> org.hibernate.type.TimeType@29cfd92b
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29cfd92b
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration timestamp -> org.hibernate.type.TimestampType@55f3c410
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55f3c410
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55f3c410
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4a8ab068
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration calendar -> org.hibernate.type.CalendarType@644c78d4
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@644c78d4
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@644c78d4
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7bb3a9fe
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@f19c9d2
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration locale -> org.hibernate.type.LocaleType@4fd4cae3
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fd4cae3
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration currency -> org.hibernate.type.CurrencyType@2baa8d82
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2baa8d82
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b52c0d6
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b52c0d6
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration class -> org.hibernate.type.ClassType@7de0c6ae
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7de0c6ae
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c36250e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c36250e
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@299266e2
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration binary -> org.hibernate.type.BinaryType@66971f6b
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration byte[] -> org.hibernate.type.BinaryType@66971f6b
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [B -> org.hibernate.type.BinaryType@66971f6b
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5990e6c5
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5990e6c5
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5990e6c5
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration row_version -> org.hibernate.type.RowVersionType@12cd9150
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration image -> org.hibernate.type.ImageType@cf65451
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration characters -> org.hibernate.type.CharArrayType@64da2a7
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration char[] -> org.hibernate.type.CharArrayType@64da2a7
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [C -> org.hibernate.type.CharArrayType@64da2a7
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b9d6699
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b9d6699
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b9d6699
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration text -> org.hibernate.type.TextType@72b16078
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration ntext -> org.hibernate.type.NTextType@1b0a7baf
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration blob -> org.hibernate.type.BlobType@53499d85
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@53499d85
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46c670a6
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration clob -> org.hibernate.type.ClobType@355e34c7
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@355e34c7
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration nclob -> org.hibernate.type.NClobType@48c40605
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@48c40605
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@476aac9
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f2bf0e2
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration serializable -> org.hibernate.type.SerializableType@363f6148
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration object -> org.hibernate.type.ObjectType@4a9e6faf
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a9e6faf
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@235d29d6
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1fdca564
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43f9dd56
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d12e953
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57cb70be
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d4608a6
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@20d87335
2023-09-06 14:51:22 [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] DEBUG-Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a8a4e0c
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
2023-09-06 14:51:22 [org.hibernate.boot.spi.XmlMappingBinderAccess.bind(XmlMappingBinderAccess.java:51)] TRACE-reading mappings from resource : WeatherInfoEntity.hbm.xml
2023-09-06 14:51:22 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:35)] TRACE-In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd, null, null)
2023-09-06 14:51:22 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:57)] DEBUG-Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2023-09-06 14:51:22 [org.hibernate.boot.jaxb.internal.stax.LocalXmlResourceResolver.resolveEntity(LocalXmlResourceResolver.java:59)] DEBUG-Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
2023-09-06 14:51:22 [org.hibernate.boot.jaxb.internal.MappingBinder.doBind(MappingBinder.java:59)] DEBUG-Performing JAXB binding of hbm.xml document : Origin(name=WeatherInfoEntity.hbm.xml,type=RESOURCE)
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-09-06 14:51:22 [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:81)] DEBUG-Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator.instantiateC3p0Provider(ConnectionProviderInitiator.java:272)] WARN -HHH000022: c3p0 properties were encountered, but the c3p0 provider class was not found on the classpath; these properties are going to be ignored.
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] WARN -HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] INFO -HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/weather]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] INFO -HHH10001001: Connection properties: {user=root, password=test}
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] INFO -HHH10001003: Autocommit mode: false
2023-09-06 14:51:22 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] DEBUG-Initializing Connection pool with 1 Connections
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249)] INFO -HHH000115: Hibernate connection pool size: 20 (min=1)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] DEBUG-Database ->
       name : MySQL
    version : 8.0.34
      major : 8
      minor : 0
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] DEBUG-Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.28 (Revision: 7ff2161da3899f379fb3171b6538b191b1c5c7e2)
      major : 8
      minor : 0
2023-09-06 14:51:22 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] DEBUG-JDBC version : 4.2
2023-09-06 14:51:22 [org.hibernate.dialect.Dialect.<init>(Dialect.java:172)] INFO -HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:113)] DEBUG-JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:187)] DEBUG-IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [weather]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [null]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
2023-09-06 14:51:22 [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] DEBUG-Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-09-06 14:51:22 [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:152)] DEBUG-Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57ad1178] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c37f145]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.EntityHierarchyBuilder.indexMappingDocument(EntityHierarchyBuilder.java:89)] TRACE-Indexing mapping document [Origin(name=WeatherInfoEntity.hbm.xml,type=RESOURCE)] for purpose of building entity hierarchy ordering
2023-09-06 14:51:22 [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addImport(InFlightMetadataCollectorImpl.java:725)] TRACE-Import: com.eland.weatherData.model.WeatherInfoEntity -> com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.boot.internal.InFlightMetadataCollectorImpl.addImport(InFlightMetadataCollectorImpl.java:725)] TRACE-Import: WeatherInfoEntity -> com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [weather]
2023-09-06 14:51:22 [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] DEBUG-Created database namespace [logicalName=Name{catalog=null, schema=weather}, physicalName=Name{catalog=null, schema=weather}]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [weather_info]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindRootEntity(ModelBinder.java:238)] DEBUG-Mapping class: com.eland.weatherData.model.WeatherInfoEntity -> weather_info
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [id]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: id -> [id]
2023-09-06 14:51:22 [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] DEBUG-Forcing column [id] to be non-null as it is part of the primary key for table [weather_info]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [city]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: city -> [city]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [date]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: date -> [date]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [sunrise]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: sunrise -> [sunrise]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [high]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: high -> [high]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [low]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: low -> [low]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [sunset]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: sunset -> [sunset]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [aqi]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: aqi -> [aqi]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [fx]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: fx -> [fx]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [fl]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: fl -> [fl]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [type]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: type -> [type]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.env.internal.NormalizingIdentifierHelperImpl.normalizeQuoting(NormalizingIdentifierHelperImpl.java:61)] TRACE-Normalizing identifier quoting [notice]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.hbm.ModelBinder.bindProperty(ModelBinder.java:2557)] DEBUG-Mapped property: notice -> [notice]
2023-09-06 14:51:22 [org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:250)] DEBUG-Skipping annotated class processing of entity [com.eland.weatherData.model.WeatherInfoEntity], as it has already been processed
2023-09-06 14:51:22 [org.hibernate.loader.BatchFetchStyle.interpret(BatchFetchStyle.java:51)] TRACE-Interpreting BatchFetchStyle from setting : null
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.bytecode.spi.BytecodeProvider]
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:201)] DEBUG-Building session factory
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:68)] DEBUG-SessionFactory name : null
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:69)] DEBUG-Automatic flush during beforeCompletion(): enabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:70)] DEBUG-Automatic session close at end of transaction: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:72)] DEBUG-Statistics: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:74)] DEBUG-Deleted entity synthetic identifier rollback: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:75)] DEBUG-Default entity-mode: pojo
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:76)] DEBUG-Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:77)] DEBUG-Allow initialization of lazy state outside session : disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:79)] DEBUG-Using BatchFetchStyle : LEGACY
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:80)] DEBUG-Default batch fetch size: -1
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:81)] DEBUG-Maximum outer join fetch depth: 2
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:82)] DEBUG-Default null ordering: NONE
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:83)] DEBUG-Order SQL updates by primary key: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:84)] DEBUG-Order SQL inserts for batching: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:86)] DEBUG-multi-tenancy strategy : NONE
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:88)] DEBUG-JTA Track by Thread: enabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:90)] DEBUG-Query language substitutions: {}
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:91)] DEBUG-Named query checking : enabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:93)] DEBUG-Second-level cache: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:94)] DEBUG-Second-level query cache: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:95)] DEBUG-Second-level query cache factory: null
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:96)] DEBUG-Second-level cache region prefix: null
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:97)] DEBUG-Optimize second-level cache for minimal puts: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:98)] DEBUG-Structured second-level cache entries: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:99)] DEBUG-Second-level cache direct-reference entries: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:100)] DEBUG-Automatic eviction of collection cache: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:102)] DEBUG-JDBC batch size: 15
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:103)] DEBUG-JDBC batch updates for versioned data: enabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:104)] DEBUG-Scrollable result sets: enabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:105)] DEBUG-Wrap result sets: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:106)] DEBUG-JDBC3 getGeneratedKeys(): enabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:107)] DEBUG-JDBC result set fetch size: null
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:108)] DEBUG-Connection release mode: AFTER_TRANSACTION
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:109)] DEBUG-Generate SQL with comments: disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:111)] DEBUG-JPA compliance - query : disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:112)] DEBUG-JPA compliance - closed-handling : disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:113)] DEBUG-JPA compliance - lists : disabled
2023-09-06 14:51:22 [org.hibernate.cfg.Settings.<init>(Settings.java:114)] DEBUG-JPA compliance - transactions : disabled
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.resource.beans.spi.ManagedBeanRegistry]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.cache.spi.CacheImplementor]
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] DEBUG-Session factory constructed with filter configurations : {}
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:257)] DEBUG-Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=MS950, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\Java\jdk-1.8\jre\lib\charsets.jar;C:\Program Files\Java\jdk-1.8\jre\lib\deploy.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk-1.8\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk-1.8\jre\lib\javaws.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jce.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jfr.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jsse.jar;C:\Program Files\Java\jdk-1.8\jre\lib\management-agent.jar;C:\Program Files\Java\jdk-1.8\jre\lib\plugin.jar;C:\Program Files\Java\jdk-1.8\jre\lib\resources.jar;C:\Program Files\Java\jdk-1.8\jre\lib\rt.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\out\production\WeatherDataAccess;C:\Users\weichiehhsu\Documents\commonLib\gson-2.8.5.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\jna-5.12.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\rxjava-3.1.5.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\rxjava-2.2.21.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-h2-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\slf4j-api-1.7.36.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\commons-cli-1.5.0.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\jna-platform-5.12.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-win-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-testing-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpcore5-reactive-5.2.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\reactive-streams-1.0.4.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-cache-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-fluent-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\lib\httpclient5-testing-5.2.1.jar;C:\Users\weichiehhsu\Documents\httpcomponents-client-5.2.1-bin\slf4j-jdk14-1.7.9.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\javax.persistence-api-2.2.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\istack-commons-runtime-3.0.7.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\antlr-2.7.7.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\javax.activation-api-1.2.0.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\byte-buddy-1.10.7.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jaxb-runtime-2.3.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jboss-logging-3.3.2.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jandex-2.1.1.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\FastInfoset-1.2.15.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\jaxb-api-2.3.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\classmate-1.5.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\javassist-3.24.0-GA.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\dom4j-2.1.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\stax-ex-1.8.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\txw2-2.3.1.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\hibernate-core-5.4.11.Final.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\mssql-jdbc-12.2.0.jre8.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\mysql-connector-java-8.0.28.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\log4j-core-2.20.0.jar;C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess\lib\log4j-api-2.20.0.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.4\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Taipei, os.name=Windows 11, java.vm.specification.version=1.8, user.country=TW, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk-1.8\jre\bin, sun.java.command=com.eland.weatherData.weatherDataAccessMain apiUrl.properties, sun.cpu.endian=little, user.home=C:\Users\weichiehhsu, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk-1.8\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk-1.8\jre\lib\resources.jar;C:\Program Files\Java\jdk-1.8\jre\lib\rt.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jsse.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jce.jar;C:\Program Files\Java\jdk-1.8\jre\lib\charsets.jar;C:\Program Files\Java\jdk-1.8\jre\lib\jfr.jar;C:\Program Files\Java\jdk-1.8\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_381-b09, user.name=weichiehhsu, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk-1.8\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/weather, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\WEICHI~1\AppData\Local\Temp\, java.version=1.8.0_381, user.dir=C:\Users\weichiehhsu\Documents\IdeaProjects\WeatherDataAccess, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ef60295, java.library.path=C:\Program Files\Java\jdk-1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Java\jdk-1.8\bin;C:\apache-tomcat-9.0.78\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Azure Data Studio\bin;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\weichiehhsu\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2019.3.4\bin;;C:\Program Files\Azure Data Studio\bin;C:\Users\weichiehhsu\AppData\Roaming\npm;C:\Users\weichiehhsu\AppData\Local\Programs\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.381-b09, hibernate.bytecode.use_reflection_optimizer=false, java.specification.maintenance.version=5, java.ext.dirs=C:\Program Files\Java\jdk-1.8\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
2023-09-06 14:51:22 [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] DEBUG-Skipping JACC integration as it was not enabled
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:296)] DEBUG-Instantiated session factory
2023-09-06 14:51:22 [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:157)] DEBUG-Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@57ad1178] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3127cb44]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
2023-09-06 14:51:22 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] DEBUG-Not known whether passed class name [com.eland.weatherData.model.WeatherInfoEntity] is safe
2023-09-06 14:51:22 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] DEBUG-No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] DEBUG-Not known whether passed class name [com.eland.weatherData.model.WeatherInfoEntity] is safe
2023-09-06 14:51:22 [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] DEBUG-No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.bytecode.spi.ProxyFactoryFactory]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [city], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [date], existing type = [org.hibernate.type.TimestampType@55f3c410], incoming type = [org.hibernate.type.TimestampType@55f3c410]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [sunrise], existing type = [org.hibernate.type.TimeType@29cfd92b], incoming type = [org.hibernate.type.TimeType@29cfd92b]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [high], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [low], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [sunset], existing type = [org.hibernate.type.TimeType@29cfd92b], incoming type = [org.hibernate.type.TimeType@29cfd92b]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [aqi], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [fx], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [fl], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [type], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [notice], existing type = [org.hibernate.type.StringType@2f162cc0], incoming type = [org.hibernate.type.StringType@2f162cc0]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractPropertyMapping.logDuplicateRegistration(AbstractPropertyMapping.java:125)] TRACE-Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@10c8f62], incoming type = [org.hibernate.type.IntegerType@10c8f62]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3855)] DEBUG-Static SQL for entity: com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3860)] DEBUG- Version select: select id from weather_info where id =?
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3863)] DEBUG- Snapshot select: select weatherinf_.id, weatherinf_.city as city2_0_, weatherinf_.date as date3_0_, weatherinf_.sunrise as sunrise4_0_, weatherinf_.high as high5_0_, weatherinf_.low as low6_0_, weatherinf_.sunset as sunset7_0_, weatherinf_.aqi as aqi8_0_, weatherinf_.fx as fx9_0_, weatherinf_.fl as fl10_0_, weatherinf_.type as type11_0_, weatherinf_.notice as notice12_0_ from weather_info weatherinf_ where weatherinf_.id=?
2023-09-06 14:51:22 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Insert 0: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Update 0: update weather_info set city=?, date=?, sunrise=?, high=?, low=?, sunset=?, aqi=?, fx=?, fl=?, type=?, notice=? where id=?
2023-09-06 14:51:22 [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] DEBUG- Delete 0: delete from weather_info where id=?
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3871)] DEBUG- Identity insert: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:172)] TRACE- Starting root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] DEBUG-Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@696db620]
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.pushToStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:113)] TRACE-Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6968c1d6
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.associationKeyRegistered(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:648)] TRACE-.. Registering AssociationKey : AssociationKey(table=weather_info, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6968c1d6
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:239)] TRACE->> Starting entity identifier : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : city
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : date
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunrise
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : high
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : low
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunset
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : aqi
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fx
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fl
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : type
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : notice
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.popFromStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:120)] TRACE-Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6968c1d6
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:208)] TRACE- Finished root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150)] DEBUG-Building LoadPlan...
2023-09-06 14:51:22 [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] DEBUG-processing queryspace <gen:0>
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] DEBUG-LoadPlan(entity=com.eland.weatherData.model.WeatherInfoEntity)
    - Returns
       - EntityReturnImpl(entity=com.eland.weatherData.model.WeatherInfoEntity, querySpaceUid=<gen:0>, path=com.eland.weatherData.model.WeatherInfoEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.eland.weatherData.model.WeatherInfoEntity)
          - SQL table alias mapping - weatherinf0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2023-09-06 14:51:22 [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:137)] DEBUG-Static select for entity com.eland.weatherData.model.WeatherInfoEntity [NONE]: select weatherinf0_.id as id1_0_0_, weatherinf0_.city as city2_0_0_, weatherinf0_.date as date3_0_0_, weatherinf0_.sunrise as sunrise4_0_0_, weatherinf0_.high as high5_0_0_, weatherinf0_.low as low6_0_0_, weatherinf0_.sunset as sunset7_0_0_, weatherinf0_.aqi as aqi8_0_0_, weatherinf0_.fx as fx9_0_0_, weatherinf0_.fl as fl10_0_0_, weatherinf0_.type as type11_0_0_, weatherinf0_.notice as notice12_0_0_ from weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:172)] TRACE- Starting root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] DEBUG-Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d986d83]
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.pushToStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:113)] TRACE-Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77f991c
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.associationKeyRegistered(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:648)] TRACE-.. Registering AssociationKey : AssociationKey(table=weather_info, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77f991c
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingEntityIdentifier(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:239)] TRACE->> Starting entity identifier : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : city
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=city, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : date
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=date, type=timestamp [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunrise
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunrise, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : high
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=high, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : low
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=low, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : sunset
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=sunset, type=time [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : aqi
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=aqi, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fx
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fx, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : fl
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=fl, type=integer [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : type
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=type, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] DEBUG-Visiting attribute path : notice
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.startingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:547)] TRACE->> Starting attribute Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingAttribute(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:628)] TRACE-<< Finishing up attribute : Attribute(name=notice, type=string [non-identifier])
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.popFromStack(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:120)] TRACE-Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77f991c
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.AbstractLoadPlanBuildingAssociationVisitationStrategy.finishingEntity(AbstractLoadPlanBuildingAssociationVisitationStrategy.java:208)] TRACE- Finished root entity : com.eland.weatherData.model.WeatherInfoEntity
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:150)] DEBUG-Building LoadPlan...
2023-09-06 14:51:22 [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] DEBUG-processing queryspace <gen:0>
2023-09-06 14:51:22 [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] DEBUG-LoadPlan(entity=com.eland.weatherData.model.WeatherInfoEntity)
    - Returns
       - EntityReturnImpl(entity=com.eland.weatherData.model.WeatherInfoEntity, querySpaceUid=<gen:0>, path=com.eland.weatherData.model.WeatherInfoEntity)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.eland.weatherData.model.WeatherInfoEntity)
          - SQL table alias mapping - weatherinf0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2023-09-06 14:51:22 [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:137)] DEBUG-Static select for entity com.eland.weatherData.model.WeatherInfoEntity [READ]: select weatherinf0_.id as id1_0_0_, weatherinf0_.city as city2_0_0_, weatherinf0_.date as date3_0_0_, weatherinf0_.sunrise as sunrise4_0_0_, weatherinf0_.high as high5_0_0_, weatherinf0_.low as low6_0_0_, weatherinf0_.sunset as sunset7_0_0_, weatherinf0_.aqi as aqi8_0_0_, weatherinf0_.fx as fx9_0_0_, weatherinf0_.fl as fl10_0_0_, weatherinf0_.type as type11_0_0_, weatherinf0_.notice as notice12_0_0_ from weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:22 [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] DEBUG-Static select for action ACTION_MERGE on entity com.eland.weatherData.model.WeatherInfoEntity: select weatherinf0_.id as id1_0_0_, weatherinf0_.city as city2_0_0_, weatherinf0_.date as date3_0_0_, weatherinf0_.sunrise as sunrise4_0_0_, weatherinf0_.high as high5_0_0_, weatherinf0_.low as low6_0_0_, weatherinf0_.sunset as sunset7_0_0_, weatherinf0_.aqi as aqi8_0_0_, weatherinf0_.fx as fx9_0_0_, weatherinf0_.fl as fl10_0_0_, weatherinf0_.type as type11_0_0_, weatherinf0_.notice as notice12_0_0_ from weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:22 [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] DEBUG-Static select for action ACTION_REFRESH on entity com.eland.weatherData.model.WeatherInfoEntity: select weatherinf0_.id as id1_0_0_, weatherinf0_.city as city2_0_0_, weatherinf0_.date as date3_0_0_, weatherinf0_.sunrise as sunrise4_0_0_, weatherinf0_.high as high5_0_0_, weatherinf0_.low as low6_0_0_, weatherinf0_.sunset as sunset7_0_0_, weatherinf0_.aqi as aqi8_0_0_, weatherinf0_.fx as fx9_0_0_, weatherinf0_.fl as fl10_0_0_, weatherinf0_.type as type11_0_0_, weatherinf0_.notice as notice12_0_0_ from weather_info weatherinf0_ where weatherinf0_.id=?
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:204)] TRACE-Wrapping up metadata context...
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:216)] TRACE-Starting entity [com.eland.weatherData.model.WeatherInfoEntity]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildIdAttribute(AttributeFactory.java:137)] TRACE-Building identifier attribute [WeatherInfoEntity.id]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [id]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public int com.eland.weatherData.model.WeatherInfoEntity.getId()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.city]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [city]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getCity()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.date]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [date]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.util.Date com.eland.weatherData.model.WeatherInfoEntity.getDate()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=timestamp, class=org.hibernate.type.TimestampType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.sunrise]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [sunrise]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.sql.Time com.eland.weatherData.model.WeatherInfoEntity.getSunrise()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=time, class=org.hibernate.type.TimeType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.high]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [high]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.Integer com.eland.weatherData.model.WeatherInfoEntity.getHigh()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.low]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [low]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.Integer com.eland.weatherData.model.WeatherInfoEntity.getLow()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.sunset]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [sunset]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.sql.Time com.eland.weatherData.model.WeatherInfoEntity.getSunset()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=time, class=org.hibernate.type.TimeType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.aqi]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [aqi]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getAqi()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.fx]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [fx]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getFx()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.fl]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [fl]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.Integer com.eland.weatherData.model.WeatherInfoEntity.getFl()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=integer, class=org.hibernate.type.IntegerType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.type]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [type]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getType()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.buildAttribute(AttributeFactory.java:88)] TRACE-Building attribute [WeatherInfoEntity.notice]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:446)] TRACE-Starting attribute metadata determination [notice]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:451)] TRACE-    Determined member [public java.lang.String com.eland.weatherData.model.WeatherInfoEntity.getNotice()]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.AttributeFactory.determineAttributeMetadata(AttributeFactory.java:455)] TRACE-    Determined type [name=string, class=org.hibernate.type.StringType]
2023-09-06 14:51:22 [org.hibernate.metamodel.internal.MetadataContext.wrapUp(MetadataContext.java:251)] TRACE-Completed entity [com.eland.weatherData.model.WeatherInfoEntity]
2023-09-06 14:51:22 [org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:57)] DEBUG-No actions specified; doing nothing
2023-09-06 14:51:22 [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:151)] DEBUG-Checking 0 named HQL queries
2023-09-06 14:51:22 [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:167)] DEBUG-Checking 0 named SQL queries
2023-09-06 14:51:22 [org.hibernate.type.spi.TypeConfiguration.sessionFactoryCreated(TypeConfiguration.java:205)] TRACE-Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3127cb44] for TypeConfiguration
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] DEBUG-Registering SessionFactory: df30c354-fde4-4151-b8db-c66029c6c0fa (<unnamed>)
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] DEBUG-Not binding SessionFactory to JNDI, no JNDI name configured
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
2023-09-06 14:51:22 [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] DEBUG-Statistics initialized [enabled=false]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.jmx.spi.JmxService]
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [2c0b81f5-bb8d-4d78-9b71-6d7298e452c5] at timestamp: 1693983082296
2023-09-06 14:51:22 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:22 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.TaskLogEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.TaskLogEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        task.dbo.task_log
        (city, update_time, status, machine_name, message, json_txt) 
    values
        (?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [SQLServerPreparedStatement:5]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 14:44:32 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [INTEGER] - [200]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [VARCHAR] - [nuc302/10.10.10.13]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [VARCHAR] - [success感谢又拍云(upyun.com)提供CDN赞助]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [VARCHAR] - [{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:44:32","cityInfo":{"city":"北京市","citykey":"101010100","parent":"北京","updateTime":"14:01"},"data":{"shidu":"60%","pm25":80.0,"pm10":105.0,"quality":"轻度","wendu":"32","ganmao":"儿童、老年人及心脏、呼吸系统疾病患者人群应减少长时间或高强度户外锻炼","forecast":[{"date":"06","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:47","sunset":"18:39","aqi":92,"fx":"南风","fl":"2级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"},{"date":"07","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:48","sunset":"18:37","aqi":92,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:49","sunset":"18:35","aqi":94,"fx":"北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 22℃","low":"低温 20℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:50","sunset":"18:34","aqi":81,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 19℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:51","sunset":"18:32","aqi":67,"fx":"西南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:51","sunset":"18:30","aqi":56,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"12","high":"高温 26℃","low":"低温 20℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:52","sunset":"18:29","aqi":60,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 26℃","low":"低温 19℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:53","sunset":"18:27","aqi":46,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 27℃","low":"低温 19℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:54","sunset":"18:26","aqi":34,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"15","high":"高温 30℃","low":"低温 20℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:55","sunset":"18:24","aqi":43,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:56","sunset":"18:22","aqi":48,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"17","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:57","sunset":"18:21","aqi":52,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"18","high":"高温 25℃","low":"低温 19℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:58","sunset":"18:19","aqi":46,"fx":"东北风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"19","high":"高温 24℃","low":"低温 18℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:59","sunset":"18:17","aqi":50,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"20","high":"高温 25℃","low":"低温 18℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:00","sunset":"18:16","aqi":92,"fx":"东南风","fl":"1级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"}],"yesterday":{"date":"05","high":"高温 33℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:46","sunset":"18:40","aqi":73,"fx":"东南风","fl":"2级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"}}}]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 415
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [SQLServerResultSet:5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [SQLServerResultSet:5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [SQLServerPreparedStatement:5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [SQLServerPreparedStatement:5]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:22 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.TaskLogEntity{city=北京市, jsonTxt={"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:44:32","cityInfo":{"city":"北京市","citykey":"101010100","parent":"北京","updateTime":"14:01"},"data":{"shidu":"60%","pm25":80.0,"pm10":105.0,"quality":"轻度","wendu":"32","ganmao":"儿童、老年人及心脏、呼吸系统疾病患者人群应减少长时间或高强度户外锻炼","forecast":[{"date":"06","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:47","sunset":"18:39","aqi":92,"fx":"南风","fl":"2级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"},{"date":"07","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:48","sunset":"18:37","aqi":92,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:49","sunset":"18:35","aqi":94,"fx":"北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 22℃","low":"低温 20℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:50","sunset":"18:34","aqi":81,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 19℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:51","sunset":"18:32","aqi":67,"fx":"西南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:51","sunset":"18:30","aqi":56,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"12","high":"高温 26℃","low":"低温 20℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:52","sunset":"18:29","aqi":60,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 26℃","low":"低温 19℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:53","sunset":"18:27","aqi":46,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 27℃","low":"低温 19℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:54","sunset":"18:26","aqi":34,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"15","high":"高温 30℃","low":"低温 20℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:55","sunset":"18:24","aqi":43,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:56","sunset":"18:22","aqi":48,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"17","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:57","sunset":"18:21","aqi":52,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"18","high":"高温 25℃","low":"低温 19℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:58","sunset":"18:19","aqi":46,"fx":"东北风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"19","high":"高温 24℃","low":"低温 18℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:59","sunset":"18:17","aqi":50,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"20","high":"高温 25℃","low":"低温 18℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:00","sunset":"18:16","aqi":92,"fx":"东南风","fl":"1级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"}],"yesterday":{"date":"05","high":"高温 33℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:46","sunset":"18:40","aqi":73,"fx":"东南风","fl":"2级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"}}}, updateTime=Wed Sep 06 14:44:32 CST 2023, id=415, message=success感谢又拍云(upyun.com)提供CDN赞助, machineName=nuc302/10.10.10.13, status=200}
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:22 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:22 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:22 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [2c0b81f5-bb8d-4d78-9b71-6d7298e452c5]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@343fddd9]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:61)] DEBUG-insert_TaskLogData_Finished
2023-09-06 14:51:22 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:30)] DEBUG-Finished taskLog Data Conversion
2023-09-06 14:51:22 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:31)] DEBUG-Start weatherInfo Data Conversion
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:70)] DEBUG-data:[{"date":"06","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:47","sunset":"18:39","aqi":92,"fx":"南风","fl":"2级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"},{"date":"07","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:48","sunset":"18:37","aqi":92,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:49","sunset":"18:35","aqi":94,"fx":"北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 22℃","low":"低温 20℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:50","sunset":"18:34","aqi":81,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 19℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:51","sunset":"18:32","aqi":67,"fx":"西南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:51","sunset":"18:30","aqi":56,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"12","high":"高温 26℃","low":"低温 20℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:52","sunset":"18:29","aqi":60,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 26℃","low":"低温 19℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:53","sunset":"18:27","aqi":46,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 27℃","low":"低温 19℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:54","sunset":"18:26","aqi":34,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"15","high":"高温 30℃","low":"低温 20℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:55","sunset":"18:24","aqi":43,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:56","sunset":"18:22","aqi":48,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"17","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:57","sunset":"18:21","aqi":52,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"18","high":"高温 25℃","low":"低温 19℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:58","sunset":"18:19","aqi":46,"fx":"东北风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"19","high":"高温 24℃","low":"低温 18℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:59","sunset":"18:17","aqi":50,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"20","high":"高温 25℃","low":"低温 18℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:00","sunset":"18:16","aqi":92,"fx":"东南风","fl":"1级","type":"霾","notice":"雾霾来袭，戴好口罩再出门"}]
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:75)] INFO -TaskLog:200
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 06 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:47:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:39:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=32
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 07 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:48:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:37:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=32
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 08 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:49:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:35:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=21
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 09 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:50:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:34:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=20
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 10 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:51:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:32:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=19
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 11 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:51:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:30:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 12 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:52:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:29:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=20
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 13 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:53:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:27:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=19
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 14 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:54:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:26:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=19
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 15 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:55:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:24:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=20
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 16 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:56:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:22:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 17 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:57:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:21:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=32
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 18 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:58:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:19:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=19
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 19 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:59:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:17:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=18
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 20 00:00:00 CST 2023
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:00:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:16:00
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=18
2023-09-06 14:51:22 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
2023-09-06 14:51:22 [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] DEBUG-Statistics initialized [enabled=false]
2023-09-06 14:51:22 [org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:233)] TRACE-Initializing service [role=org.hibernate.jmx.spi.JmxService]
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [a95d283e-c885-4302-b839-6ed3c979f36c] at timestamp: 1693983082411
2023-09-06 14:51:22 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:22 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:47:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [32]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:39:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [92]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [霾]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雾霾来袭，戴好口罩再出门]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2781
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@50b0afd7]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@50b0afd7]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-06 00:00:00', '05:47:00', 32, 23, '18:39:00', '92', '南风', 2, '霾', '雾霾来袭，戴好口罩再出门')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-06 00:00:00', '05:47:00', 32, 23, '18:39:00', '92', '南风', 2, '霾', '雾霾来袭，戴好口罩再出门')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 07 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:48:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [32]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:37:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [92]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2782
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3a401749]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3a401749]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-07 00:00:00', '05:48:00', 32, 23, '18:37:00', '92', '南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-07 00:00:00', '05:48:00', 32, 23, '18:37:00', '92', '南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 08 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:49:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [21]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:35:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [94]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2783
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@2cd388f5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@2cd388f5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-08 00:00:00', '05:49:00', 29, 21, '18:35:00', '94', '北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-08 00:00:00', '05:49:00', 29, 21, '18:35:00', '94', '北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 09 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:50:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [22]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [20]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:34:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [81]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2784
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4f169009]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4f169009]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-09 00:00:00', '05:50:00', 22, 20, '18:34:00', '81', '东风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-09 00:00:00', '05:50:00', 22, 20, '18:34:00', '81', '东风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 10 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:51:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [19]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:32:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [67]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2785
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@57efc6fd]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@57efc6fd]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-10 00:00:00', '05:51:00', 29, 19, '18:32:00', '67', '西南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-10 00:00:00', '05:51:00', 29, 19, '18:32:00', '67', '西南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 11 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:51:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:30:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [56]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2786
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@67cffead]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@67cffead]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-11 00:00:00', '05:51:00', 29, 22, '18:30:00', '56', '南风', 1, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-11 00:00:00', '05:51:00', 29, 22, '18:30:00', '56', '南风', 1, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 12 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:52:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [26]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [20]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:29:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [60]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2787
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@39de9bda]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@39de9bda]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-12 00:00:00', '05:52:00', 26, 20, '18:29:00', '60', '东风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-12 00:00:00', '05:52:00', 26, 20, '18:29:00', '60', '东风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 13 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:53:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [26]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [19]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:27:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [46]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2788
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5fcd1c5f]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5fcd1c5f]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-13 00:00:00', '05:53:00', 26, 19, '18:27:00', '46', '南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-13 00:00:00', '05:53:00', 26, 19, '18:27:00', '46', '南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 14 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:54:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [19]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:26:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [34]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2789
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5af64ce0]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5af64ce0]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-14 00:00:00', '05:54:00', 27, 19, '18:26:00', '34', '南风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-14 00:00:00', '05:54:00', 27, 19, '18:26:00', '34', '南风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 15 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:55:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [20]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:24:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [43]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2790
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@66fb45e5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@66fb45e5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-15 00:00:00', '05:55:00', 30, 20, '18:24:00', '43', '南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-15 00:00:00', '05:55:00', 30, 20, '18:24:00', '43', '南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 16 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:56:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:22:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [48]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2791
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@49e2b3c5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@49e2b3c5]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-16 00:00:00', '05:56:00', 28, 22, '18:22:00', '48', '西南风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-16 00:00:00', '05:56:00', 28, 22, '18:22:00', '48', '西南风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 17 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:57:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [32]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:21:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [52]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2792
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@30db5536]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@30db5536]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-17 00:00:00', '05:57:00', 32, 23, '18:21:00', '52', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-17 00:00:00', '05:57:00', 32, 23, '18:21:00', '52', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 18 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:58:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [25]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [19]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:19:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [46]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2793
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@484149eb]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@484149eb]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-18 00:00:00', '05:58:00', 25, 19, '18:19:00', '46', '东北风', 1, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-18 00:00:00', '05:58:00', 25, 19, '18:19:00', '46', '东北风', 1, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 19 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:59:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [24]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [18]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:17:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [50]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西北风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2794
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4f2d014a]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4f2d014a]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-19 00:00:00', '05:59:00', 24, 18, '18:17:00', '50', '西北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-19 00:00:00', '05:59:00', 24, 18, '18:17:00', '50', '西北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:22 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:22 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [北京市]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 20 00:00:00 CST 2023]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:00:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [25]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [18]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:16:00]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [92]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [霾]
2023-09-06 14:51:22 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雾霾来袭，戴好口罩再出门]
2023-09-06 14:51:22 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2795
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1d98daa0]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1d98daa0]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-20 00:00:00', '06:00:00', 25, 18, '18:16:00', '92', '东南风', 1, '霾', '雾霾来袭，戴好口罩再出门')]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('北京市', '2023-09-20 00:00:00', '06:00:00', 25, 18, '18:16:00', '92', '东南风', 1, '霾', '雾霾来袭，戴好口罩再出门')]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:22 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 15 00:00:00 CST 2023, sunrise=05:55:00, high=30, fx=南风, city=北京市, low=20, fl=1, sunset=18:24:00, aqi=43, id=2790, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 16 00:00:00 CST 2023, sunrise=05:56:00, high=28, fx=西南风, city=北京市, low=22, fl=2, sunset=18:22:00, aqi=48, id=2791, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 17 00:00:00 CST 2023, sunrise=05:57:00, high=32, fx=北风, city=北京市, low=23, fl=2, sunset=18:21:00, aqi=52, id=2792, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 18 00:00:00 CST 2023, sunrise=05:58:00, high=25, fx=东北风, city=北京市, low=19, fl=1, sunset=18:19:00, aqi=46, id=2793, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 19 00:00:00 CST 2023, sunrise=05:59:00, high=24, fx=西北风, city=北京市, low=18, fl=2, sunset=18:17:00, aqi=50, id=2794, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 20 00:00:00 CST 2023, sunrise=06:00:00, high=25, fx=东南风, city=北京市, low=18, fl=1, sunset=18:16:00, aqi=92, id=2795, type=霾, notice=雾霾来袭，戴好口罩再出门}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 07 00:00:00 CST 2023, sunrise=05:48:00, high=32, fx=南风, city=北京市, low=23, fl=2, sunset=18:37:00, aqi=92, id=2782, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 08 00:00:00 CST 2023, sunrise=05:49:00, high=29, fx=北风, city=北京市, low=21, fl=2, sunset=18:35:00, aqi=94, id=2783, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 09 00:00:00 CST 2023, sunrise=05:50:00, high=22, fx=东风, city=北京市, low=20, fl=1, sunset=18:34:00, aqi=81, id=2784, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 10 00:00:00 CST 2023, sunrise=05:51:00, high=29, fx=西南风, city=北京市, low=19, fl=1, sunset=18:32:00, aqi=67, id=2785, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 11 00:00:00 CST 2023, sunrise=05:51:00, high=29, fx=南风, city=北京市, low=22, fl=1, sunset=18:30:00, aqi=56, id=2786, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 12 00:00:00 CST 2023, sunrise=05:52:00, high=26, fx=东风, city=北京市, low=20, fl=2, sunset=18:29:00, aqi=60, id=2787, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 13 00:00:00 CST 2023, sunrise=05:53:00, high=26, fx=南风, city=北京市, low=19, fl=2, sunset=18:27:00, aqi=46, id=2788, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 14 00:00:00 CST 2023, sunrise=05:54:00, high=27, fx=南风, city=北京市, low=19, fl=2, sunset=18:26:00, aqi=34, id=2789, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:22 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 06 00:00:00 CST 2023, sunrise=05:47:00, high=32, fx=南风, city=北京市, low=23, fl=2, sunset=18:39:00, aqi=92, id=2781, type=霾, notice=雾霾来袭，戴好口罩再出门}
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:22 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:22 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:22 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:22 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:22 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [a95d283e-c885-4302-b839-6ed3c979f36c]
2023-09-06 14:51:22 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1de4285e]
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:22 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:22 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:22 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:104)] INFO -insert_weatherInfoList_Finished
2023-09-06 14:51:22 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:33)] DEBUG-Finished weatherInfo Data Conversion
2023-09-06 14:51:22 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:26)] DEBUG-API Url:HongKong
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:171)] INFO -200 OK
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:176)] DEBUG-{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:49:11","cityInfo":{"city":"香港","citykey":"101320101","parent":"","updateTime":"13:01"},"data":{"shidu":"68%","pm25":19.0,"pm10":30.0,"quality":"优","wendu":"35","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 32℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"06:07","sunset":"18:36","aqi":76,"fx":"西风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"06:08","sunset":"18:35","aqi":47,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"06:08","sunset":"18:34","aqi":72,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-09","week":"星期六","sunrise":"06:08","sunset":"18:33","aqi":64,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-10","week":"星期日","sunrise":"06:08","sunset":"18:32","aqi":77,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 27℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"06:09","sunset":"18:31","aqi":77,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-12","week":"星期二","sunrise":"06:09","sunset":"18:30","aqi":44,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"13","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-13","week":"星期三","sunrise":"06:09","sunset":"18:29","aqi":66,"fx":"东风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"14","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-14","week":"星期四","sunrise":"06:09","sunset":"18:28","aqi":44,"fx":"东风","fl":"4级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 26℃","ymd":"2023-09-15","week":"星期五","sunrise":"06:10","sunset":"18:27","aqi":51,"fx":"东北风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"06:10","sunset":"18:26","aqi":51,"fx":"北风","fl":"4级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"06:10","sunset":"18:25","aqi":44,"fx":"西北风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"06:11","sunset":"18:24","aqi":62,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"19","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"06:11","sunset":"18:23","aqi":56,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"20","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:11","sunset":"18:22","aqi":47,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"06:07","sunset":"18:37","aqi":45,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"}}}
2023-09-06 14:51:23 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:28)] DEBUG-Start taskLog Data Conversion
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:35)] INFO -Crate_JsonObject
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:37)] INFO -TaskLog:200
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:43)] INFO -Crate_TaskLog
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [8e4ff6a5-df4e-4705-b0f1-2b898b47c152] at timestamp: 1693983083607
2023-09-06 14:51:23 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:23 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.TaskLogEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.TaskLogEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        task.dbo.task_log
        (city, update_time, status, machine_name, message, json_txt) 
    values
        (?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [SQLServerPreparedStatement:6]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 14:49:11 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [INTEGER] - [200]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [VARCHAR] - [nuc302/10.10.10.13]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [VARCHAR] - [success感谢又拍云(upyun.com)提供CDN赞助]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [VARCHAR] - [{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:49:11","cityInfo":{"city":"香港","citykey":"101320101","parent":"","updateTime":"13:01"},"data":{"shidu":"68%","pm25":19.0,"pm10":30.0,"quality":"优","wendu":"35","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 32℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"06:07","sunset":"18:36","aqi":76,"fx":"西风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"06:08","sunset":"18:35","aqi":47,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"06:08","sunset":"18:34","aqi":72,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-09","week":"星期六","sunrise":"06:08","sunset":"18:33","aqi":64,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-10","week":"星期日","sunrise":"06:08","sunset":"18:32","aqi":77,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 27℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"06:09","sunset":"18:31","aqi":77,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-12","week":"星期二","sunrise":"06:09","sunset":"18:30","aqi":44,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"13","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-13","week":"星期三","sunrise":"06:09","sunset":"18:29","aqi":66,"fx":"东风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"14","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-14","week":"星期四","sunrise":"06:09","sunset":"18:28","aqi":44,"fx":"东风","fl":"4级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 26℃","ymd":"2023-09-15","week":"星期五","sunrise":"06:10","sunset":"18:27","aqi":51,"fx":"东北风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"06:10","sunset":"18:26","aqi":51,"fx":"北风","fl":"4级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"06:10","sunset":"18:25","aqi":44,"fx":"西北风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"06:11","sunset":"18:24","aqi":62,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"19","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"06:11","sunset":"18:23","aqi":56,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"20","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:11","sunset":"18:22","aqi":47,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"06:07","sunset":"18:37","aqi":45,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"}}}]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 416
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [SQLServerResultSet:6]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [SQLServerResultSet:6]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [SQLServerPreparedStatement:6]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [SQLServerPreparedStatement:6]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:23 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.TaskLogEntity{city=香港, jsonTxt={"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:49:11","cityInfo":{"city":"香港","citykey":"101320101","parent":"","updateTime":"13:01"},"data":{"shidu":"68%","pm25":19.0,"pm10":30.0,"quality":"优","wendu":"35","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 32℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"06:07","sunset":"18:36","aqi":76,"fx":"西风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"06:08","sunset":"18:35","aqi":47,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"06:08","sunset":"18:34","aqi":72,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-09","week":"星期六","sunrise":"06:08","sunset":"18:33","aqi":64,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-10","week":"星期日","sunrise":"06:08","sunset":"18:32","aqi":77,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 27℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"06:09","sunset":"18:31","aqi":77,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-12","week":"星期二","sunrise":"06:09","sunset":"18:30","aqi":44,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"13","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-13","week":"星期三","sunrise":"06:09","sunset":"18:29","aqi":66,"fx":"东风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"14","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-14","week":"星期四","sunrise":"06:09","sunset":"18:28","aqi":44,"fx":"东风","fl":"4级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 26℃","ymd":"2023-09-15","week":"星期五","sunrise":"06:10","sunset":"18:27","aqi":51,"fx":"东北风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"06:10","sunset":"18:26","aqi":51,"fx":"北风","fl":"4级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"06:10","sunset":"18:25","aqi":44,"fx":"西北风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"06:11","sunset":"18:24","aqi":62,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"19","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"06:11","sunset":"18:23","aqi":56,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"20","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:11","sunset":"18:22","aqi":47,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"06:07","sunset":"18:37","aqi":45,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"}}}, updateTime=Wed Sep 06 14:49:11 CST 2023, id=416, message=success感谢又拍云(upyun.com)提供CDN赞助, machineName=nuc302/10.10.10.13, status=200}
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:23 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:23 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:23 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [8e4ff6a5-df4e-4705-b0f1-2b898b47c152]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4099209b]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:61)] DEBUG-insert_TaskLogData_Finished
2023-09-06 14:51:23 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:30)] DEBUG-Finished taskLog Data Conversion
2023-09-06 14:51:23 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:31)] DEBUG-Start weatherInfo Data Conversion
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:70)] DEBUG-data:[{"date":"06","high":"高温 32℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"06:07","sunset":"18:36","aqi":76,"fx":"西风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"06:08","sunset":"18:35","aqi":47,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"06:08","sunset":"18:34","aqi":72,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-09","week":"星期六","sunrise":"06:08","sunset":"18:33","aqi":64,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-10","week":"星期日","sunrise":"06:08","sunset":"18:32","aqi":77,"fx":"东风","fl":"4级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 27℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"06:09","sunset":"18:31","aqi":77,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-12","week":"星期二","sunrise":"06:09","sunset":"18:30","aqi":44,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"13","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-13","week":"星期三","sunrise":"06:09","sunset":"18:29","aqi":66,"fx":"东风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"14","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-14","week":"星期四","sunrise":"06:09","sunset":"18:28","aqi":44,"fx":"东风","fl":"4级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 26℃","ymd":"2023-09-15","week":"星期五","sunrise":"06:10","sunset":"18:27","aqi":51,"fx":"东北风","fl":"5级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"06:10","sunset":"18:26","aqi":51,"fx":"北风","fl":"4级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 27℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"06:10","sunset":"18:25","aqi":44,"fx":"西北风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"06:11","sunset":"18:24","aqi":62,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"19","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"06:11","sunset":"18:23","aqi":56,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"20","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"06:11","sunset":"18:22","aqi":47,"fx":"东风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"}]
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:75)] INFO -TaskLog:200
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 06 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:07:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:36:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=32
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 07 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:08:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:35:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 08 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:08:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:34:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 09 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:08:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:33:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 10 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:08:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:32:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 11 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:09:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:31:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 12 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:09:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:30:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 13 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:09:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:29:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=5
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 14 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:09:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:28:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 15 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:10:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:27:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=5
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 16 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:10:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:26:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 17 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:10:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:25:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 18 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:11:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:24:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 19 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:11:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:23:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 20 00:00:00 CST 2023
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=06:11:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:22:00
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:23 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [8e8a3e17-62cf-4607-8e91-5edb65e13d50] at timestamp: 1693983083639
2023-09-06 14:51:23 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:23 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:07:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [32]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:36:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [76]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2796
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3e3cd6fe]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3e3cd6fe]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-06 00:00:00', '06:07:00', 32, 24, '18:36:00', '76', '西风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-06 00:00:00', '06:07:00', 32, 24, '18:36:00', '76', '西风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 07 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:08:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:35:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [47]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2797
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5ccb85d6]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5ccb85d6]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-07 00:00:00', '06:08:00', 28, 26, '18:35:00', '47', '东风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-07 00:00:00', '06:08:00', 28, 26, '18:35:00', '47', '东风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 08 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:08:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:34:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [72]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2798
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@488f3dd1]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@488f3dd1]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-08 00:00:00', '06:08:00', 28, 26, '18:34:00', '72', '东风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-08 00:00:00', '06:08:00', 28, 26, '18:34:00', '72', '东风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 09 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:08:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:33:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [64]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2799
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@554188ac]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@554188ac]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-09 00:00:00', '06:08:00', 28, 26, '18:33:00', '64', '东风', 4, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-09 00:00:00', '06:08:00', 28, 26, '18:33:00', '64', '东风', 4, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 10 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:08:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:32:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [77]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2800
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7f353a0f]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7f353a0f]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-10 00:00:00', '06:08:00', 28, 26, '18:32:00', '77', '东风', 4, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-10 00:00:00', '06:08:00', 28, 26, '18:32:00', '77', '东风', 4, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 11 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:09:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:31:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [77]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2801
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@2abc8034]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@2abc8034]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-11 00:00:00', '06:09:00', 27, 26, '18:31:00', '77', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-11 00:00:00', '06:09:00', 27, 26, '18:31:00', '77', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 12 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:09:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:30:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [44]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2802
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@c7f4457]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@c7f4457]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-12 00:00:00', '06:09:00', 28, 26, '18:30:00', '44', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-12 00:00:00', '06:09:00', 28, 26, '18:30:00', '44', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 13 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:09:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:29:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [66]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [5]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2803
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@ca8ef3a]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@ca8ef3a]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-13 00:00:00', '06:09:00', 28, 26, '18:29:00', '66', '东风', 5, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-13 00:00:00', '06:09:00', 28, 26, '18:29:00', '66', '东风', 5, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 14 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:09:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:28:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [44]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2804
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7a687d8d]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7a687d8d]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-14 00:00:00', '06:09:00', 28, 26, '18:28:00', '44', '东风', 4, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-14 00:00:00', '06:09:00', 28, 26, '18:28:00', '44', '东风', 4, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 15 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:10:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:27:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [51]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [5]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2805
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7ba93755]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7ba93755]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-15 00:00:00', '06:10:00', 29, 26, '18:27:00', '51', '东北风', 5, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-15 00:00:00', '06:10:00', 29, 26, '18:27:00', '51', '东北风', 5, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 16 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:10:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:26:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [51]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2806
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@664212ab]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@664212ab]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-16 00:00:00', '06:10:00', 27, 23, '18:26:00', '51', '北风', 4, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-16 00:00:00', '06:10:00', 27, 23, '18:26:00', '51', '北风', 4, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 17 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:10:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:25:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [44]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西北风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2807
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@a6e4897]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@a6e4897]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-17 00:00:00', '06:10:00', 27, 23, '18:25:00', '44', '西北风', 3, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-17 00:00:00', '06:10:00', 27, 23, '18:25:00', '44', '西北风', 3, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 18 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:11:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:24:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [62]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2808
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@63f6bed1]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@63f6bed1]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-18 00:00:00', '06:11:00', 28, 25, '18:24:00', '62', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-18 00:00:00', '06:11:00', 28, 25, '18:24:00', '62', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 19 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:11:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:23:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [56]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2809
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7f287b98]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7f287b98]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-19 00:00:00', '06:11:00', 27, 25, '18:23:00', '56', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-19 00:00:00', '06:11:00', 27, 25, '18:23:00', '56', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:23 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:23 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [香港]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 20 00:00:00 CST 2023]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [06:11:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:22:00]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [47]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:23 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:23 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2810
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@553da911]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@553da911]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-20 00:00:00', '06:11:00', 28, 26, '18:22:00', '47', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('香港', '2023-09-20 00:00:00', '06:11:00', 28, 26, '18:22:00', '47', '东风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:23 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 06 00:00:00 CST 2023, sunrise=06:07:00, high=32, fx=西风, city=香港, low=24, fl=2, sunset=18:36:00, aqi=76, id=2796, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 07 00:00:00 CST 2023, sunrise=06:08:00, high=28, fx=东风, city=香港, low=26, fl=3, sunset=18:35:00, aqi=47, id=2797, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 16 00:00:00 CST 2023, sunrise=06:10:00, high=27, fx=北风, city=香港, low=23, fl=4, sunset=18:26:00, aqi=51, id=2806, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 17 00:00:00 CST 2023, sunrise=06:10:00, high=27, fx=西北风, city=香港, low=23, fl=3, sunset=18:25:00, aqi=44, id=2807, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 18 00:00:00 CST 2023, sunrise=06:11:00, high=28, fx=东风, city=香港, low=25, fl=4, sunset=18:24:00, aqi=62, id=2808, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 19 00:00:00 CST 2023, sunrise=06:11:00, high=27, fx=东风, city=香港, low=25, fl=4, sunset=18:23:00, aqi=56, id=2809, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 20 00:00:00 CST 2023, sunrise=06:11:00, high=28, fx=东风, city=香港, low=26, fl=4, sunset=18:22:00, aqi=47, id=2810, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 08 00:00:00 CST 2023, sunrise=06:08:00, high=28, fx=东风, city=香港, low=26, fl=3, sunset=18:34:00, aqi=72, id=2798, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 09 00:00:00 CST 2023, sunrise=06:08:00, high=28, fx=东风, city=香港, low=26, fl=4, sunset=18:33:00, aqi=64, id=2799, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 10 00:00:00 CST 2023, sunrise=06:08:00, high=28, fx=东风, city=香港, low=26, fl=4, sunset=18:32:00, aqi=77, id=2800, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 11 00:00:00 CST 2023, sunrise=06:09:00, high=27, fx=东风, city=香港, low=26, fl=4, sunset=18:31:00, aqi=77, id=2801, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 12 00:00:00 CST 2023, sunrise=06:09:00, high=28, fx=东风, city=香港, low=26, fl=4, sunset=18:30:00, aqi=44, id=2802, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 13 00:00:00 CST 2023, sunrise=06:09:00, high=28, fx=东风, city=香港, low=26, fl=5, sunset=18:29:00, aqi=66, id=2803, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 14 00:00:00 CST 2023, sunrise=06:09:00, high=28, fx=东风, city=香港, low=26, fl=4, sunset=18:28:00, aqi=44, id=2804, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:23 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 15 00:00:00 CST 2023, sunrise=06:10:00, high=29, fx=东北风, city=香港, low=26, fl=5, sunset=18:27:00, aqi=51, id=2805, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:23 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:23 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:23 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:23 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:23 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [8e8a3e17-62cf-4607-8e91-5edb65e13d50]
2023-09-06 14:51:23 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@1084ac45]
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:23 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:23 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:23 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:104)] INFO -insert_weatherInfoList_Finished
2023-09-06 14:51:23 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:33)] DEBUG-Finished weatherInfo Data Conversion
2023-09-06 14:51:23 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:26)] DEBUG-API Url:Shanghai
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:171)] INFO -200 OK
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:176)] DEBUG-{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:14:18","cityInfo":{"city":"上海市","citykey":"101020100","parent":"上海","updateTime":"14:01"},"data":{"shidu":"56%","pm25":14.0,"pm10":17.0,"quality":"优","wendu":"34","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:33","sunset":"18:12","aqi":57,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"07","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:34","sunset":"18:11","aqi":56,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:34","sunset":"18:09","aqi":63,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"09","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:35","sunset":"18:08","aqi":51,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"10","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:35","sunset":"18:07","aqi":54,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:36","sunset":"18:06","aqi":53,"fx":"北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 31℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:36","sunset":"18:04","aqi":32,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:37","sunset":"18:03","aqi":54,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:38","sunset":"18:02","aqi":49,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:38","sunset":"18:00","aqi":56,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:39","sunset":"17:59","aqi":54,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"17","high":"高温 31℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:39","sunset":"17:58","aqi":49,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"18","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:40","sunset":"17:57","aqi":42,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 33℃","low":"低温 23℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:40","sunset":"17:55","aqi":33,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 33℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:54","aqi":39,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}],"yesterday":{"date":"05","high":"高温 31℃","low":"低温 26℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:32","sunset":"18:13","aqi":32,"fx":"东北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"}}}
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:28)] DEBUG-Start taskLog Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:35)] INFO -Crate_JsonObject
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:37)] INFO -TaskLog:200
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:43)] INFO -Crate_TaskLog
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [a90bda78-be12-45a2-97c8-8c9c970ba3f8] at timestamp: 1693983084161
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.TaskLogEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.TaskLogEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        task.dbo.task_log
        (city, update_time, status, machine_name, message, json_txt) 
    values
        (?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [SQLServerPreparedStatement:7]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 14:14:18 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [INTEGER] - [200]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [VARCHAR] - [nuc302/10.10.10.13]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [VARCHAR] - [success感谢又拍云(upyun.com)提供CDN赞助]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [VARCHAR] - [{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:14:18","cityInfo":{"city":"上海市","citykey":"101020100","parent":"上海","updateTime":"14:01"},"data":{"shidu":"56%","pm25":14.0,"pm10":17.0,"quality":"优","wendu":"34","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:33","sunset":"18:12","aqi":57,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"07","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:34","sunset":"18:11","aqi":56,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:34","sunset":"18:09","aqi":63,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"09","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:35","sunset":"18:08","aqi":51,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"10","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:35","sunset":"18:07","aqi":54,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:36","sunset":"18:06","aqi":53,"fx":"北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 31℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:36","sunset":"18:04","aqi":32,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:37","sunset":"18:03","aqi":54,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:38","sunset":"18:02","aqi":49,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:38","sunset":"18:00","aqi":56,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:39","sunset":"17:59","aqi":54,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"17","high":"高温 31℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:39","sunset":"17:58","aqi":49,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"18","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:40","sunset":"17:57","aqi":42,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 33℃","low":"低温 23℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:40","sunset":"17:55","aqi":33,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 33℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:54","aqi":39,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}],"yesterday":{"date":"05","high":"高温 31℃","low":"低温 26℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:32","sunset":"18:13","aqi":32,"fx":"东北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"}}}]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 417
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [SQLServerResultSet:7]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [SQLServerResultSet:7]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [SQLServerPreparedStatement:7]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [SQLServerPreparedStatement:7]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.TaskLogEntity{city=上海市, jsonTxt={"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:14:18","cityInfo":{"city":"上海市","citykey":"101020100","parent":"上海","updateTime":"14:01"},"data":{"shidu":"56%","pm25":14.0,"pm10":17.0,"quality":"优","wendu":"34","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:33","sunset":"18:12","aqi":57,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"07","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:34","sunset":"18:11","aqi":56,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:34","sunset":"18:09","aqi":63,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"09","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:35","sunset":"18:08","aqi":51,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"10","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:35","sunset":"18:07","aqi":54,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:36","sunset":"18:06","aqi":53,"fx":"北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 31℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:36","sunset":"18:04","aqi":32,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:37","sunset":"18:03","aqi":54,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:38","sunset":"18:02","aqi":49,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:38","sunset":"18:00","aqi":56,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:39","sunset":"17:59","aqi":54,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"17","high":"高温 31℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:39","sunset":"17:58","aqi":49,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"18","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:40","sunset":"17:57","aqi":42,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 33℃","low":"低温 23℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:40","sunset":"17:55","aqi":33,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 33℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:54","aqi":39,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}],"yesterday":{"date":"05","high":"高温 31℃","low":"低温 26℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:32","sunset":"18:13","aqi":32,"fx":"东北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"}}}, updateTime=Wed Sep 06 14:14:18 CST 2023, id=417, message=success感谢又拍云(upyun.com)提供CDN赞助, machineName=nuc302/10.10.10.13, status=200}
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:24 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [a90bda78-be12-45a2-97c8-8c9c970ba3f8]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4cc7d00d]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:61)] DEBUG-insert_TaskLogData_Finished
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:30)] DEBUG-Finished taskLog Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:31)] DEBUG-Start weatherInfo Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:70)] DEBUG-data:[{"date":"06","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:33","sunset":"18:12","aqi":57,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"07","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:34","sunset":"18:11","aqi":56,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:34","sunset":"18:09","aqi":63,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"09","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:35","sunset":"18:08","aqi":51,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"10","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:35","sunset":"18:07","aqi":54,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:36","sunset":"18:06","aqi":53,"fx":"北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 31℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:36","sunset":"18:04","aqi":32,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 21℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:37","sunset":"18:03","aqi":54,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:38","sunset":"18:02","aqi":49,"fx":"北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:38","sunset":"18:00","aqi":56,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"16","high":"高温 32℃","low":"低温 23℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:39","sunset":"17:59","aqi":54,"fx":"东北风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"17","high":"高温 31℃","low":"低温 23℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:39","sunset":"17:58","aqi":49,"fx":"东风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"18","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:40","sunset":"17:57","aqi":42,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 33℃","low":"低温 23℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:40","sunset":"17:55","aqi":33,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 33℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:54","aqi":39,"fx":"东南风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}]
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:75)] INFO -TaskLog:200
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 06 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:33:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:12:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 07 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:34:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:11:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 08 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:34:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:09:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 09 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:35:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:08:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 10 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:35:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:07:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 11 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:36:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:06:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=21
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 12 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:36:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:04:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 13 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:37:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:03:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=21
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 14 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:38:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:02:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 15 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:38:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:00:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 16 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:39:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:59:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=32
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 17 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:39:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:58:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 18 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:40:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:57:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 19 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:40:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:55:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=33
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 20 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:41:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:54:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=33
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [918e8cab-6579-4ebb-97e2-9cd46d0e8c0a] at timestamp: 1693983084192
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:33:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:12:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [57]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2811
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@75b38c36]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@75b38c36]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-06 00:00:00', '05:33:00', 31, 25, '18:12:00', '57', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-06 00:00:00', '05:33:00', 31, 25, '18:12:00', '57', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 07 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:34:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:11:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [56]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2812
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7edb6fca]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7edb6fca]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-07 00:00:00', '05:34:00', 31, 24, '18:11:00', '56', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-07 00:00:00', '05:34:00', 31, 24, '18:11:00', '56', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 08 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:34:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:09:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [63]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2813
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@478b0739]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@478b0739]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-08 00:00:00', '05:34:00', 30, 23, '18:09:00', '63', '东风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-08 00:00:00', '05:34:00', 30, 23, '18:09:00', '63', '东风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 09 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:35:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:08:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [51]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2814
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@706ddbc8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@706ddbc8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-09 00:00:00', '05:35:00', 30, 22, '18:08:00', '51', '东北风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-09 00:00:00', '05:35:00', 30, 22, '18:08:00', '51', '东北风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 10 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:35:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:07:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [54]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2815
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@609319c3]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@609319c3]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-10 00:00:00', '05:35:00', 29, 22, '18:07:00', '54', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-10 00:00:00', '05:35:00', 29, 22, '18:07:00', '54', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 11 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:36:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [21]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:06:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [53]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2816
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5d1b1c2a]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5d1b1c2a]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-11 00:00:00', '05:36:00', 30, 21, '18:06:00', '53', '北风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-11 00:00:00', '05:36:00', 30, 21, '18:06:00', '53', '北风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 12 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:36:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:04:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [32]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2817
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@77429040]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@77429040]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-12 00:00:00', '05:36:00', 31, 22, '18:04:00', '32', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-12 00:00:00', '05:36:00', 31, 22, '18:04:00', '32', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 13 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:37:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [21]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:03:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [54]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2818
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@40ef0af8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@40ef0af8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-13 00:00:00', '05:37:00', 30, 21, '18:03:00', '54', '北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-13 00:00:00', '05:37:00', 30, 21, '18:03:00', '54', '北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 14 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:38:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:02:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [49]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2819
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3f63a513]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3f63a513]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-14 00:00:00', '05:38:00', 29, 22, '18:02:00', '49', '北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-14 00:00:00', '05:38:00', 29, 22, '18:02:00', '49', '北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 15 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:38:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:00:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [56]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2820
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6435fa1c]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6435fa1c]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-15 00:00:00', '05:38:00', 30, 22, '18:00:00', '56', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-15 00:00:00', '05:38:00', 30, 22, '18:00:00', '56', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 16 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:39:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [32]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:59:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [54]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2821
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5f7eee96]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5f7eee96]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-16 00:00:00', '05:39:00', 32, 23, '17:59:00', '54', '东北风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-16 00:00:00', '05:39:00', 32, 23, '17:59:00', '54', '东北风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 17 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:39:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:58:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [49]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2822
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6f8e9d06]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6f8e9d06]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-17 00:00:00', '05:39:00', 31, 23, '17:58:00', '49', '东风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-17 00:00:00', '05:39:00', 31, 23, '17:58:00', '49', '东风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 18 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:40:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:57:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [42]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2823
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@180b3819]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@180b3819]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-18 00:00:00', '05:40:00', 30, 23, '17:57:00', '42', '东风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-18 00:00:00', '05:40:00', 30, 23, '17:57:00', '42', '东风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 19 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:40:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [33]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:55:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [33]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2824
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@32f1fafe]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@32f1fafe]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-19 00:00:00', '05:40:00', 33, 23, '17:55:00', '33', '东南风', 3, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-19 00:00:00', '05:40:00', 33, 23, '17:55:00', '33', '东南风', 3, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [上海市]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 20 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:41:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [33]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:54:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [39]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2825
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4de79b7d]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4de79b7d]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-20 00:00:00', '05:41:00', 33, 25, '17:54:00', '39', '东南风', 3, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('上海市', '2023-09-20 00:00:00', '05:41:00', 33, 25, '17:54:00', '39', '东南风', 3, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 17 00:00:00 CST 2023, sunrise=05:39:00, high=31, fx=东风, city=上海市, low=23, fl=2, sunset=17:58:00, aqi=49, id=2822, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 18 00:00:00 CST 2023, sunrise=05:40:00, high=30, fx=东风, city=上海市, low=23, fl=2, sunset=17:57:00, aqi=42, id=2823, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 19 00:00:00 CST 2023, sunrise=05:40:00, high=33, fx=东南风, city=上海市, low=23, fl=3, sunset=17:55:00, aqi=33, id=2824, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 20 00:00:00 CST 2023, sunrise=05:41:00, high=33, fx=东南风, city=上海市, low=25, fl=3, sunset=17:54:00, aqi=39, id=2825, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 09 00:00:00 CST 2023, sunrise=05:35:00, high=30, fx=东北风, city=上海市, low=22, fl=2, sunset=18:08:00, aqi=51, id=2814, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 10 00:00:00 CST 2023, sunrise=05:35:00, high=29, fx=北风, city=上海市, low=22, fl=2, sunset=18:07:00, aqi=54, id=2815, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 11 00:00:00 CST 2023, sunrise=05:36:00, high=30, fx=北风, city=上海市, low=21, fl=2, sunset=18:06:00, aqi=53, id=2816, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 12 00:00:00 CST 2023, sunrise=05:36:00, high=31, fx=北风, city=上海市, low=22, fl=2, sunset=18:04:00, aqi=32, id=2817, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 13 00:00:00 CST 2023, sunrise=05:37:00, high=30, fx=北风, city=上海市, low=21, fl=2, sunset=18:03:00, aqi=54, id=2818, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 14 00:00:00 CST 2023, sunrise=05:38:00, high=29, fx=北风, city=上海市, low=22, fl=2, sunset=18:02:00, aqi=49, id=2819, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 15 00:00:00 CST 2023, sunrise=05:38:00, high=30, fx=北风, city=上海市, low=22, fl=2, sunset=18:00:00, aqi=56, id=2820, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 16 00:00:00 CST 2023, sunrise=05:39:00, high=32, fx=东北风, city=上海市, low=23, fl=2, sunset=17:59:00, aqi=54, id=2821, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 06 00:00:00 CST 2023, sunrise=05:33:00, high=31, fx=东北风, city=上海市, low=25, fl=2, sunset=18:12:00, aqi=57, id=2811, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 07 00:00:00 CST 2023, sunrise=05:34:00, high=31, fx=东北风, city=上海市, low=24, fl=2, sunset=18:11:00, aqi=56, id=2812, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 08 00:00:00 CST 2023, sunrise=05:34:00, high=30, fx=东风, city=上海市, low=23, fl=2, sunset=18:09:00, aqi=63, id=2813, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:24 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [918e8cab-6579-4ebb-97e2-9cd46d0e8c0a]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4c51077d]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:104)] INFO -insert_weatherInfoList_Finished
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:33)] DEBUG-Finished weatherInfo Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:26)] DEBUG-API Url:Taipei
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:171)] INFO -200 OK
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:176)] DEBUG-{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:43:54","cityInfo":{"city":"台北","citykey":"101340101","parent":"台湾","updateTime":"11:46"},"data":{"shidu":"75%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"33","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 29℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:36","sunset":"18:08","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 26℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:37","sunset":"18:07","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:37","sunset":"18:05","aqi":0,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:37","sunset":"18:04","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:38","sunset":"18:03","aqi":0,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:38","sunset":"18:02","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:38","sunset":"18:01","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:39","sunset":"18:00","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:39","sunset":"17:59","aqi":0,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:39","sunset":"17:58","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 20℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:40","sunset":"17:57","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:40","sunset":"17:56","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:41","sunset":"17:55","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:41","sunset":"17:54","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"20","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:53","aqi":0,"fx":"东南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:36","sunset":"18:09","aqi":0,"fx":"东南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"}}}
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:28)] DEBUG-Start taskLog Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:35)] INFO -Crate_JsonObject
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:37)] INFO -TaskLog:200
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:43)] INFO -Crate_TaskLog
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [404cb1aa-39f5-4e0c-9425-fc315a120d19] at timestamp: 1693983084396
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.TaskLogEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.TaskLogEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        task.dbo.task_log
        (city, update_time, status, machine_name, message, json_txt) 
    values
        (?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [SQLServerPreparedStatement:8]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 14:43:54 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [INTEGER] - [200]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [VARCHAR] - [nuc302/10.10.10.13]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [VARCHAR] - [success感谢又拍云(upyun.com)提供CDN赞助]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [VARCHAR] - [{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:43:54","cityInfo":{"city":"台北","citykey":"101340101","parent":"台湾","updateTime":"11:46"},"data":{"shidu":"75%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"33","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 29℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:36","sunset":"18:08","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 26℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:37","sunset":"18:07","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:37","sunset":"18:05","aqi":0,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:37","sunset":"18:04","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:38","sunset":"18:03","aqi":0,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:38","sunset":"18:02","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:38","sunset":"18:01","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:39","sunset":"18:00","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:39","sunset":"17:59","aqi":0,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:39","sunset":"17:58","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 20℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:40","sunset":"17:57","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:40","sunset":"17:56","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:41","sunset":"17:55","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:41","sunset":"17:54","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"20","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:53","aqi":0,"fx":"东南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:36","sunset":"18:09","aqi":0,"fx":"东南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"}}}]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 418
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [SQLServerResultSet:8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [SQLServerResultSet:8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [SQLServerPreparedStatement:8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [SQLServerPreparedStatement:8]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.TaskLogEntity{city=台北, jsonTxt={"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:43:54","cityInfo":{"city":"台北","citykey":"101340101","parent":"台湾","updateTime":"11:46"},"data":{"shidu":"75%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"33","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 29℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:36","sunset":"18:08","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 26℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:37","sunset":"18:07","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:37","sunset":"18:05","aqi":0,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:37","sunset":"18:04","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:38","sunset":"18:03","aqi":0,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:38","sunset":"18:02","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:38","sunset":"18:01","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:39","sunset":"18:00","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:39","sunset":"17:59","aqi":0,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:39","sunset":"17:58","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 20℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:40","sunset":"17:57","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:40","sunset":"17:56","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:41","sunset":"17:55","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:41","sunset":"17:54","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"20","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:53","aqi":0,"fx":"东南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:36","sunset":"18:09","aqi":0,"fx":"东南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"}}}, updateTime=Wed Sep 06 14:43:54 CST 2023, id=418, message=success感谢又拍云(upyun.com)提供CDN赞助, machineName=nuc302/10.10.10.13, status=200}
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:24 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [404cb1aa-39f5-4e0c-9425-fc315a120d19]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@9b23822]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:61)] DEBUG-insert_TaskLogData_Finished
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:30)] DEBUG-Finished taskLog Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:31)] DEBUG-Start weatherInfo Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:70)] DEBUG-data:[{"date":"06","high":"高温 29℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:36","sunset":"18:08","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 26℃","low":"低温 23℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:37","sunset":"18:07","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:37","sunset":"18:05","aqi":0,"fx":"东风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:37","sunset":"18:04","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:38","sunset":"18:03","aqi":0,"fx":"东风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 29℃","low":"低温 22℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:38","sunset":"18:02","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"12","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:38","sunset":"18:01","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 30℃","low":"低温 23℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:39","sunset":"18:00","aqi":0,"fx":"东北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 30℃","low":"低温 22℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:39","sunset":"17:59","aqi":0,"fx":"西北风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"15","high":"高温 29℃","low":"低温 21℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:39","sunset":"17:58","aqi":0,"fx":"东风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"16","high":"高温 27℃","low":"低温 20℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:40","sunset":"17:57","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"17","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:40","sunset":"17:56","aqi":0,"fx":"东南风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:41","sunset":"17:55","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:41","sunset":"17:54","aqi":0,"fx":"南风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"20","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:41","sunset":"17:53","aqi":0,"fx":"东南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"}]
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:75)] INFO -TaskLog:200
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 06 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:36:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:08:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 07 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:37:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:07:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 08 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:37:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:05:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 09 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:37:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:04:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 10 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:38:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:03:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 11 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:38:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:02:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 12 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:38:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:01:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 13 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:39:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:00:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 14 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:39:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:59:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 15 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:39:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:58:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=21
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 16 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:40:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:57:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=20
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 17 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:40:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:56:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 18 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:41:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:55:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 19 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:41:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:54:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 20 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:41:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:53:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [528d497b-fa93-40f3-b8d3-e25a7f2d638a] at timestamp: 1693983084419
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:36:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:08:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2826
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@423a0e1d]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@423a0e1d]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-06 00:00:00', '05:36:00', 29, 24, '18:08:00', '0', '东风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-06 00:00:00', '05:36:00', 29, 24, '18:08:00', '0', '东风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 07 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:37:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [26]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:07:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2827
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@79476a4e]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@79476a4e]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-07 00:00:00', '05:37:00', 26, 23, '18:07:00', '0', '东风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-07 00:00:00', '05:37:00', 26, 23, '18:07:00', '0', '东风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 08 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:37:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:05:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2828
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5856dbe4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5856dbe4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-08 00:00:00', '05:37:00', 29, 23, '18:05:00', '0', '东风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-08 00:00:00', '05:37:00', 29, 23, '18:05:00', '0', '东风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 09 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:37:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:04:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2829
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@20c812c8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@20c812c8]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-09 00:00:00', '05:37:00', 29, 23, '18:04:00', '0', '东北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-09 00:00:00', '05:37:00', 29, 23, '18:04:00', '0', '东北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 10 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:38:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:03:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2830
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@52ea0269]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@52ea0269]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-10 00:00:00', '05:38:00', 29, 23, '18:03:00', '0', '东风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-10 00:00:00', '05:38:00', 29, 23, '18:03:00', '0', '东风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 11 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:38:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:02:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2831
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@53940e2f]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@53940e2f]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-11 00:00:00', '05:38:00', 29, 22, '18:02:00', '0', '东北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-11 00:00:00', '05:38:00', 29, 22, '18:02:00', '0', '东北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 12 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:38:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:01:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2832
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3e377967]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3e377967]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-12 00:00:00', '05:38:00', 30, 22, '18:01:00', '0', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-12 00:00:00', '05:38:00', 30, 22, '18:01:00', '0', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 13 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:39:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:00:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2833
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@377874b4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@377874b4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-13 00:00:00', '05:39:00', 30, 23, '18:00:00', '0', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-13 00:00:00', '05:39:00', 30, 23, '18:00:00', '0', '东北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 14 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:39:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:59:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2834
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5eabff6b]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5eabff6b]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-14 00:00:00', '05:39:00', 30, 22, '17:59:00', '0', '西北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-14 00:00:00', '05:39:00', 30, 22, '17:59:00', '0', '西北风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 15 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:39:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [21]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:58:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2835
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7b25ab31]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7b25ab31]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-15 00:00:00', '05:39:00', 29, 21, '17:58:00', '0', '东风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-15 00:00:00', '05:39:00', 29, 21, '17:58:00', '0', '东风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 16 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:40:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [20]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:57:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2836
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@664632e9]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@664632e9]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-16 00:00:00', '05:40:00', 27, 20, '17:57:00', '0', '东南风', 1, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-16 00:00:00', '05:40:00', 27, 20, '17:57:00', '0', '东南风', 1, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 17 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:40:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:56:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2837
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4b515eab]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4b515eab]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-17 00:00:00', '05:40:00', 28, 22, '17:56:00', '0', '东南风', 1, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-17 00:00:00', '05:40:00', 28, 22, '17:56:00', '0', '东南风', 1, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 18 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:41:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:55:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2838
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7792d851]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7792d851]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-18 00:00:00', '05:41:00', 29, 23, '17:55:00', '0', '南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-18 00:00:00', '05:41:00', 29, 23, '17:55:00', '0', '南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 19 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:41:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:54:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2839
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1235151c]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1235151c]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-19 00:00:00', '05:41:00', 29, 25, '17:54:00', '0', '南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-19 00:00:00', '05:41:00', 29, 25, '17:54:00', '0', '南风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台北]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 20 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:41:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:53:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2840
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6d672bd4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6d672bd4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-20 00:00:00', '05:41:00', 30, 25, '17:53:00', '0', '东南风', 1, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台北', '2023-09-20 00:00:00', '05:41:00', 30, 25, '17:53:00', '0', '东南风', 1, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 06 00:00:00 CST 2023, sunrise=05:36:00, high=29, fx=东风, city=台北, low=24, fl=1, sunset=18:08:00, aqi=0, id=2826, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 07 00:00:00 CST 2023, sunrise=05:37:00, high=26, fx=东风, city=台北, low=23, fl=2, sunset=18:07:00, aqi=0, id=2827, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 08 00:00:00 CST 2023, sunrise=05:37:00, high=29, fx=东风, city=台北, low=23, fl=3, sunset=18:05:00, aqi=0, id=2828, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 09 00:00:00 CST 2023, sunrise=05:37:00, high=29, fx=东北风, city=台北, low=23, fl=2, sunset=18:04:00, aqi=0, id=2829, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 18 00:00:00 CST 2023, sunrise=05:41:00, high=29, fx=南风, city=台北, low=23, fl=1, sunset=17:55:00, aqi=0, id=2838, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 19 00:00:00 CST 2023, sunrise=05:41:00, high=29, fx=南风, city=台北, low=25, fl=1, sunset=17:54:00, aqi=0, id=2839, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 20 00:00:00 CST 2023, sunrise=05:41:00, high=30, fx=东南风, city=台北, low=25, fl=1, sunset=17:53:00, aqi=0, id=2840, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 10 00:00:00 CST 2023, sunrise=05:38:00, high=29, fx=东风, city=台北, low=23, fl=2, sunset=18:03:00, aqi=0, id=2830, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 11 00:00:00 CST 2023, sunrise=05:38:00, high=29, fx=东北风, city=台北, low=22, fl=2, sunset=18:02:00, aqi=0, id=2831, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 12 00:00:00 CST 2023, sunrise=05:38:00, high=30, fx=东北风, city=台北, low=22, fl=2, sunset=18:01:00, aqi=0, id=2832, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 13 00:00:00 CST 2023, sunrise=05:39:00, high=30, fx=东北风, city=台北, low=23, fl=2, sunset=18:00:00, aqi=0, id=2833, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 14 00:00:00 CST 2023, sunrise=05:39:00, high=30, fx=西北风, city=台北, low=22, fl=2, sunset=17:59:00, aqi=0, id=2834, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 15 00:00:00 CST 2023, sunrise=05:39:00, high=29, fx=东风, city=台北, low=21, fl=2, sunset=17:58:00, aqi=0, id=2835, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 16 00:00:00 CST 2023, sunrise=05:40:00, high=27, fx=东南风, city=台北, low=20, fl=1, sunset=17:57:00, aqi=0, id=2836, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 17 00:00:00 CST 2023, sunrise=05:40:00, high=28, fx=东南风, city=台北, low=22, fl=1, sunset=17:56:00, aqi=0, id=2837, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:24 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [528d497b-fa93-40f3-b8d3-e25a7f2d638a]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@72906e]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:104)] INFO -insert_weatherInfoList_Finished
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:33)] DEBUG-Finished weatherInfo Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:26)] DEBUG-API Url:Kaohsiung
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:171)] INFO -200 OK
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:176)] DEBUG-{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:49:50","cityInfo":{"city":"高雄","citykey":"101340201","parent":"台湾","updateTime":"11:31"},"data":{"shidu":"94%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"27","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:42","sunset":"18:11","aqi":0,"fx":"南风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:43","sunset":"18:10","aqi":0,"fx":"东南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:43","sunset":"18:09","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"09","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:43","sunset":"18:08","aqi":0,"fx":"东南风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 26℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:44","sunset":"18:07","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"11","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:44","sunset":"18:06","aqi":0,"fx":"西北风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:44","sunset":"18:05","aqi":0,"fx":"西南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:45","sunset":"18:04","aqi":0,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:45","sunset":"18:03","aqi":0,"fx":"南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"15","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:45","sunset":"18:02","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"16","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:45","sunset":"18:01","aqi":0,"fx":"东南风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:46","sunset":"18:00","aqi":0,"fx":"东南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:46","sunset":"17:59","aqi":0,"fx":"东南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"19","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:46","sunset":"17:58","aqi":0,"fx":"西南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 29℃","low":"低温 28℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:47","sunset":"17:57","aqi":0,"fx":"西风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:42","sunset":"18:12","aqi":0,"fx":"南风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"}}}
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:28)] DEBUG-Start taskLog Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:35)] INFO -Crate_JsonObject
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:37)] INFO -TaskLog:200
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:43)] INFO -Crate_TaskLog
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [08deddb6-bd26-4e71-ac06-1d1b2a074bd8] at timestamp: 1693983084932
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.TaskLogEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.TaskLogEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        task.dbo.task_log
        (city, update_time, status, machine_name, message, json_txt) 
    values
        (?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [SQLServerPreparedStatement:9]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 14:49:50 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [INTEGER] - [200]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [VARCHAR] - [nuc302/10.10.10.13]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [VARCHAR] - [success感谢又拍云(upyun.com)提供CDN赞助]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [VARCHAR] - [{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:49:50","cityInfo":{"city":"高雄","citykey":"101340201","parent":"台湾","updateTime":"11:31"},"data":{"shidu":"94%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"27","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:42","sunset":"18:11","aqi":0,"fx":"南风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:43","sunset":"18:10","aqi":0,"fx":"东南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:43","sunset":"18:09","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"09","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:43","sunset":"18:08","aqi":0,"fx":"东南风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 26℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:44","sunset":"18:07","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"11","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:44","sunset":"18:06","aqi":0,"fx":"西北风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:44","sunset":"18:05","aqi":0,"fx":"西南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:45","sunset":"18:04","aqi":0,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:45","sunset":"18:03","aqi":0,"fx":"南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"15","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:45","sunset":"18:02","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"16","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:45","sunset":"18:01","aqi":0,"fx":"东南风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:46","sunset":"18:00","aqi":0,"fx":"东南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:46","sunset":"17:59","aqi":0,"fx":"东南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"19","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:46","sunset":"17:58","aqi":0,"fx":"西南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 29℃","low":"低温 28℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:47","sunset":"17:57","aqi":0,"fx":"西风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:42","sunset":"18:12","aqi":0,"fx":"南风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"}}}]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 419
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [SQLServerResultSet:9]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [SQLServerResultSet:9]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [SQLServerPreparedStatement:9]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [SQLServerPreparedStatement:9]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.TaskLogEntity{city=高雄, jsonTxt={"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:49:50","cityInfo":{"city":"高雄","citykey":"101340201","parent":"台湾","updateTime":"11:31"},"data":{"shidu":"94%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"27","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:42","sunset":"18:11","aqi":0,"fx":"南风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:43","sunset":"18:10","aqi":0,"fx":"东南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:43","sunset":"18:09","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"09","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:43","sunset":"18:08","aqi":0,"fx":"东南风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 26℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:44","sunset":"18:07","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"11","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:44","sunset":"18:06","aqi":0,"fx":"西北风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:44","sunset":"18:05","aqi":0,"fx":"西南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:45","sunset":"18:04","aqi":0,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:45","sunset":"18:03","aqi":0,"fx":"南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"15","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:45","sunset":"18:02","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"16","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:45","sunset":"18:01","aqi":0,"fx":"东南风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:46","sunset":"18:00","aqi":0,"fx":"东南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:46","sunset":"17:59","aqi":0,"fx":"东南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"19","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:46","sunset":"17:58","aqi":0,"fx":"西南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 29℃","low":"低温 28℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:47","sunset":"17:57","aqi":0,"fx":"西风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"}],"yesterday":{"date":"05","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:42","sunset":"18:12","aqi":0,"fx":"南风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"}}}, updateTime=Wed Sep 06 14:49:50 CST 2023, id=419, message=success感谢又拍云(upyun.com)提供CDN赞助, machineName=nuc302/10.10.10.13, status=200}
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:24 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [08deddb6-bd26-4e71-ac06-1d1b2a074bd8]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@4f486211]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:61)] DEBUG-insert_TaskLogData_Finished
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:30)] DEBUG-Finished taskLog Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:31)] DEBUG-Start weatherInfo Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:70)] DEBUG-data:[{"date":"06","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:42","sunset":"18:11","aqi":0,"fx":"南风","fl":"3级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"07","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:43","sunset":"18:10","aqi":0,"fx":"东南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"08","high":"高温 28℃","low":"低温 26℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:43","sunset":"18:09","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"09","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:43","sunset":"18:08","aqi":0,"fx":"东南风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"10","high":"高温 26℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:44","sunset":"18:07","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"11","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:44","sunset":"18:06","aqi":0,"fx":"西北风","fl":"3级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"12","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:44","sunset":"18:05","aqi":0,"fx":"西南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:45","sunset":"18:04","aqi":0,"fx":"西南风","fl":"2级","type":"阴","notice":"不要被阴云遮挡住好心情"},{"date":"14","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:45","sunset":"18:03","aqi":0,"fx":"南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"15","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:45","sunset":"18:02","aqi":0,"fx":"东南风","fl":"4级","type":"大雨","notice":"出门最好穿雨衣，勿挡视线"},{"date":"16","high":"高温 28℃","low":"低温 25℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:45","sunset":"18:01","aqi":0,"fx":"东南风","fl":"4级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:46","sunset":"18:00","aqi":0,"fx":"东南风","fl":"3级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 27℃","low":"低温 25℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:46","sunset":"17:59","aqi":0,"fx":"东南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"19","high":"高温 29℃","low":"低温 27℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:46","sunset":"17:58","aqi":0,"fx":"西南风","fl":"1级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 29℃","low":"低温 28℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:47","sunset":"17:57","aqi":0,"fx":"西风","fl":"1级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"}]
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:75)] INFO -TaskLog:200
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 06 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:42:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:11:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 07 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:43:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:10:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 08 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:43:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:09:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 09 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:43:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:08:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 10 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:44:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:07:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 11 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:44:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:06:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 12 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:44:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:05:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 13 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:45:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:04:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 14 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:45:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:03:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 15 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:45:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:02:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 16 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:45:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:01:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=4
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 17 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:46:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:00:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 18 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:46:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:59:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 19 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:46:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:58:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 20 00:00:00 CST 2023
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:47:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:57:00
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:24 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [98f2d774-2d4d-4f27-895f-ca1a11da983e] at timestamp: 1693983084959
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:42:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:11:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2841
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@472d0f4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@472d0f4]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-06 00:00:00', '05:42:00', 29, 25, '18:11:00', '0', '南风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-06 00:00:00', '05:42:00', 29, 25, '18:11:00', '0', '南风', 3, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 07 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:43:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:10:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2842
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6418e39e]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6418e39e]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-07 00:00:00', '05:43:00', 28, 26, '18:10:00', '0', '东南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-07 00:00:00', '05:43:00', 28, 26, '18:10:00', '0', '东南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 08 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:43:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:09:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2843
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3332c7a5]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@3332c7a5]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-08 00:00:00', '05:43:00', 28, 26, '18:09:00', '0', '南风', 2, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-08 00:00:00', '05:43:00', 28, 26, '18:09:00', '0', '南风', 2, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 09 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:43:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:08:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2844
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@25a94b55]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@25a94b55]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-09 00:00:00', '05:43:00', 28, 25, '18:08:00', '0', '东南风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-09 00:00:00', '05:43:00', 28, 25, '18:08:00', '0', '东南风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 10 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:44:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [26]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:07:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [大雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [出门最好穿雨衣，勿挡视线]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2845
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6b1b19cf]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6b1b19cf]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-10 00:00:00', '05:44:00', 26, 24, '18:07:00', '0', '东南风', 4, '大雨', '出门最好穿雨衣，勿挡视线')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-10 00:00:00', '05:44:00', 26, 24, '18:07:00', '0', '东南风', 4, '大雨', '出门最好穿雨衣，勿挡视线')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 11 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:44:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:06:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西北风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2846
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7945b206]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7945b206]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-11 00:00:00', '05:44:00', 30, 26, '18:06:00', '0', '西北风', 3, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-11 00:00:00', '05:44:00', 30, 26, '18:06:00', '0', '西北风', 3, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 12 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:44:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:05:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2847
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4b862408]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4b862408]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-12 00:00:00', '05:44:00', 29, 27, '18:05:00', '0', '西南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-12 00:00:00', '05:44:00', 29, 27, '18:05:00', '0', '西南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 13 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:45:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:04:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2848
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@307e4c44]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@307e4c44]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-13 00:00:00', '05:45:00', 29, 27, '18:04:00', '0', '西南风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-13 00:00:00', '05:45:00', 29, 27, '18:04:00', '0', '西南风', 2, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 14 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:45:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:03:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2849
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4c19d42e]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4c19d42e]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-14 00:00:00', '05:45:00', 29, 27, '18:03:00', '0', '南风', 3, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-14 00:00:00', '05:45:00', 29, 27, '18:03:00', '0', '南风', 3, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 15 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:45:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:02:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [大雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [出门最好穿雨衣，勿挡视线]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2850
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5482bcac]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5482bcac]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-15 00:00:00', '05:45:00', 27, 25, '18:02:00', '0', '东南风', 4, '大雨', '出门最好穿雨衣，勿挡视线')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-15 00:00:00', '05:45:00', 27, 25, '18:02:00', '0', '东南风', 4, '大雨', '出门最好穿雨衣，勿挡视线')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 16 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:45:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:01:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [4]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2851
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@33bb3f86]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@33bb3f86]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-16 00:00:00', '05:45:00', 28, 25, '18:01:00', '0', '东南风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-16 00:00:00', '05:45:00', 28, 25, '18:01:00', '0', '东南风', 4, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 17 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:46:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:00:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2852
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1e3ff233]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1e3ff233]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-17 00:00:00', '05:46:00', 27, 25, '18:00:00', '0', '东南风', 3, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-17 00:00:00', '05:46:00', 27, 25, '18:00:00', '0', '东南风', 3, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 18 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:46:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:59:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2853
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@709f0202]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@709f0202]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-18 00:00:00', '05:46:00', 27, 25, '17:59:00', '0', '东南风', 2, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-18 00:00:00', '05:46:00', 27, 25, '17:59:00', '0', '东南风', 2, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 19 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:46:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [27]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:58:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西南风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2854
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1e225820]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@1e225820]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-19 00:00:00', '05:46:00', 29, 27, '17:58:00', '0', '西南风', 1, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-19 00:00:00', '05:46:00', 29, 27, '17:58:00', '0', '西南风', 1, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:24 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:24 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [高雄]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 20 00:00:00 CST 2023]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:47:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [28]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:57:00]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西风]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:24 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:24 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2855
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@36ef1d65]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@36ef1d65]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-20 00:00:00', '05:47:00', 29, 28, '17:57:00', '0', '西风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('高雄', '2023-09-20 00:00:00', '05:47:00', 29, 28, '17:57:00', '0', '西风', 1, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 19 00:00:00 CST 2023, sunrise=05:46:00, high=29, fx=西南风, city=高雄, low=27, fl=1, sunset=17:58:00, aqi=0, id=2854, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 20 00:00:00 CST 2023, sunrise=05:47:00, high=29, fx=西风, city=高雄, low=28, fl=1, sunset=17:57:00, aqi=0, id=2855, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 11 00:00:00 CST 2023, sunrise=05:44:00, high=30, fx=西北风, city=高雄, low=26, fl=3, sunset=18:06:00, aqi=0, id=2846, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 12 00:00:00 CST 2023, sunrise=05:44:00, high=29, fx=西南风, city=高雄, low=27, fl=2, sunset=18:05:00, aqi=0, id=2847, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 13 00:00:00 CST 2023, sunrise=05:45:00, high=29, fx=西南风, city=高雄, low=27, fl=2, sunset=18:04:00, aqi=0, id=2848, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 14 00:00:00 CST 2023, sunrise=05:45:00, high=29, fx=南风, city=高雄, low=27, fl=3, sunset=18:03:00, aqi=0, id=2849, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 15 00:00:00 CST 2023, sunrise=05:45:00, high=27, fx=东南风, city=高雄, low=25, fl=4, sunset=18:02:00, aqi=0, id=2850, type=大雨, notice=出门最好穿雨衣，勿挡视线}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 16 00:00:00 CST 2023, sunrise=05:45:00, high=28, fx=东南风, city=高雄, low=25, fl=4, sunset=18:01:00, aqi=0, id=2851, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 17 00:00:00 CST 2023, sunrise=05:46:00, high=27, fx=东南风, city=高雄, low=25, fl=3, sunset=18:00:00, aqi=0, id=2852, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 18 00:00:00 CST 2023, sunrise=05:46:00, high=27, fx=东南风, city=高雄, low=25, fl=2, sunset=17:59:00, aqi=0, id=2853, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 06 00:00:00 CST 2023, sunrise=05:42:00, high=29, fx=南风, city=高雄, low=25, fl=3, sunset=18:11:00, aqi=0, id=2841, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 07 00:00:00 CST 2023, sunrise=05:43:00, high=28, fx=东南风, city=高雄, low=26, fl=2, sunset=18:10:00, aqi=0, id=2842, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 08 00:00:00 CST 2023, sunrise=05:43:00, high=28, fx=南风, city=高雄, low=26, fl=2, sunset=18:09:00, aqi=0, id=2843, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 09 00:00:00 CST 2023, sunrise=05:43:00, high=28, fx=东南风, city=高雄, low=25, fl=2, sunset=18:08:00, aqi=0, id=2844, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:24 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 10 00:00:00 CST 2023, sunrise=05:44:00, high=26, fx=东南风, city=高雄, low=24, fl=4, sunset=18:07:00, aqi=0, id=2845, type=大雨, notice=出门最好穿雨衣，勿挡视线}
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:24 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:24 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:24 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:24 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [98f2d774-2d4d-4f27-895f-ca1a11da983e]
2023-09-06 14:51:24 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@5f366587]
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:24 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:24 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:104)] INFO -insert_weatherInfoList_Finished
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:33)] DEBUG-Finished weatherInfo Data Conversion
2023-09-06 14:51:24 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:26)] DEBUG-API Url:Taichung
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:171)] INFO -200 OK
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.lambda$httpApiDataGet$0(WeatherInfoHandled.java:176)] DEBUG-{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:43:56","cityInfo":{"city":"台中","citykey":"101340401","parent":"台湾","updateTime":"11:31"},"data":{"shidu":"68%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"33","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 30℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:40","sunset":"18:11","aqi":0,"fx":"东北风","fl":"1级","type":"暴雨","notice":"关好门窗，外出避开低洼地"},{"date":"07","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:41","sunset":"18:10","aqi":0,"fx":"西北风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:41","sunset":"18:09","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:41","sunset":"18:08","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:42","sunset":"18:07","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:42","sunset":"18:06","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"12","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:42","sunset":"18:05","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:43","sunset":"18:04","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:43","sunset":"18:02","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"15","high":"高温 27℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:43","sunset":"18:01","aqi":0,"fx":"北风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:44","sunset":"18:00","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 24℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:44","sunset":"17:59","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:44","sunset":"17:58","aqi":0,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:45","sunset":"17:57","aqi":0,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:45","sunset":"17:56","aqi":0,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"}],"yesterday":{"date":"05","high":"高温 28℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:40","sunset":"18:12","aqi":0,"fx":"东北风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"}}}
2023-09-06 14:51:25 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:28)] DEBUG-Start taskLog Data Conversion
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:35)] INFO -Crate_JsonObject
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:37)] INFO -TaskLog:200
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:43)] INFO -Crate_TaskLog
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [4aef1b31-9520-49d3-8496-dcf30e3eb1c3] at timestamp: 1693983085121
2023-09-06 14:51:25 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:25 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.TaskLogEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.TaskLogEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.TaskLogEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        task.dbo.task_log
        (city, update_time, status, machine_name, message, json_txt) 
    values
        (?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [SQLServerPreparedStatement:10]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.TaskLogEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 14:43:56 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [INTEGER] - [200]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [VARCHAR] - [nuc302/10.10.10.13]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [VARCHAR] - [success感谢又拍云(upyun.com)提供CDN赞助]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [VARCHAR] - [{"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:43:56","cityInfo":{"city":"台中","citykey":"101340401","parent":"台湾","updateTime":"11:31"},"data":{"shidu":"68%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"33","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 30℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:40","sunset":"18:11","aqi":0,"fx":"东北风","fl":"1级","type":"暴雨","notice":"关好门窗，外出避开低洼地"},{"date":"07","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:41","sunset":"18:10","aqi":0,"fx":"西北风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:41","sunset":"18:09","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:41","sunset":"18:08","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:42","sunset":"18:07","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:42","sunset":"18:06","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"12","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:42","sunset":"18:05","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:43","sunset":"18:04","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:43","sunset":"18:02","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"15","high":"高温 27℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:43","sunset":"18:01","aqi":0,"fx":"北风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:44","sunset":"18:00","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 24℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:44","sunset":"17:59","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:44","sunset":"17:58","aqi":0,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:45","sunset":"17:57","aqi":0,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:45","sunset":"17:56","aqi":0,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"}],"yesterday":{"date":"05","high":"高温 28℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:40","sunset":"18:12","aqi":0,"fx":"东北风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"}}}]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 420
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [SQLServerResultSet:10]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [SQLServerResultSet:10]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [SQLServerPreparedStatement:10]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [SQLServerPreparedStatement:10]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:25 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.TaskLogEntity{city=台中, jsonTxt={"message":"success感谢又拍云(upyun.com)提供CDN赞助","status":200,"date":"20230906","time":"2023-09-06 14:43:56","cityInfo":{"city":"台中","citykey":"101340401","parent":"台湾","updateTime":"11:31"},"data":{"shidu":"68%","pm25":0.0,"pm10":0.0,"quality":"优","wendu":"33","ganmao":"各类人群可自由活动","forecast":[{"date":"06","high":"高温 30℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:40","sunset":"18:11","aqi":0,"fx":"东北风","fl":"1级","type":"暴雨","notice":"关好门窗，外出避开低洼地"},{"date":"07","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:41","sunset":"18:10","aqi":0,"fx":"西北风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:41","sunset":"18:09","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:41","sunset":"18:08","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:42","sunset":"18:07","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:42","sunset":"18:06","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"12","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:42","sunset":"18:05","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:43","sunset":"18:04","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:43","sunset":"18:02","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"15","high":"高温 27℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:43","sunset":"18:01","aqi":0,"fx":"北风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:44","sunset":"18:00","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 24℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:44","sunset":"17:59","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:44","sunset":"17:58","aqi":0,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:45","sunset":"17:57","aqi":0,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:45","sunset":"17:56","aqi":0,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"}],"yesterday":{"date":"05","high":"高温 28℃","low":"低温 24℃","ymd":"2023-09-05","week":"星期二","sunrise":"05:40","sunset":"18:12","aqi":0,"fx":"东北风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"}}}, updateTime=Wed Sep 06 14:43:56 CST 2023, id=420, message=success感谢又拍云(upyun.com)提供CDN赞助, machineName=nuc302/10.10.10.13, status=200}
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:25 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:25 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:25 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [4aef1b31-9520-49d3-8496-dcf30e3eb1c3]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@691500ab]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.taskLogConversion(WeatherInfoHandled.java:61)] DEBUG-insert_TaskLogData_Finished
2023-09-06 14:51:25 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:30)] DEBUG-Finished taskLog Data Conversion
2023-09-06 14:51:25 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:31)] DEBUG-Start weatherInfo Data Conversion
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:70)] DEBUG-data:[{"date":"06","high":"高温 30℃","low":"低温 24℃","ymd":"2023-09-06","week":"星期三","sunrise":"05:40","sunset":"18:11","aqi":0,"fx":"东北风","fl":"1级","type":"暴雨","notice":"关好门窗，外出避开低洼地"},{"date":"07","high":"高温 29℃","low":"低温 25℃","ymd":"2023-09-07","week":"星期四","sunrise":"05:41","sunset":"18:10","aqi":0,"fx":"西北风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"08","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-08","week":"星期五","sunrise":"05:41","sunset":"18:09","aqi":0,"fx":"东北风","fl":"2级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"09","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-09","week":"星期六","sunrise":"05:41","sunset":"18:08","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"10","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-10","week":"星期日","sunrise":"05:42","sunset":"18:07","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"11","high":"高温 31℃","low":"低温 25℃","ymd":"2023-09-11","week":"星期一","sunrise":"05:42","sunset":"18:06","aqi":0,"fx":"北风","fl":"3级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"12","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-12","week":"星期二","sunrise":"05:42","sunset":"18:05","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"13","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-13","week":"星期三","sunrise":"05:43","sunset":"18:04","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"14","high":"高温 31℃","low":"低温 24℃","ymd":"2023-09-14","week":"星期四","sunrise":"05:43","sunset":"18:02","aqi":0,"fx":"北风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"15","high":"高温 27℃","low":"低温 22℃","ymd":"2023-09-15","week":"星期五","sunrise":"05:43","sunset":"18:01","aqi":0,"fx":"北风","fl":"1级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"16","high":"高温 28℃","low":"低温 22℃","ymd":"2023-09-16","week":"星期六","sunrise":"05:44","sunset":"18:00","aqi":0,"fx":"东风","fl":"1级","type":"小雨","notice":"雨虽小，注意保暖别感冒"},{"date":"17","high":"高温 27℃","low":"低温 24℃","ymd":"2023-09-17","week":"星期日","sunrise":"05:44","sunset":"17:59","aqi":0,"fx":"南风","fl":"2级","type":"中雨","notice":"记得随身携带雨伞哦"},{"date":"18","high":"高温 29℃","low":"低温 23℃","ymd":"2023-09-18","week":"星期一","sunrise":"05:44","sunset":"17:58","aqi":0,"fx":"南风","fl":"2级","type":"多云","notice":"阴晴之间，谨防紫外线侵扰"},{"date":"19","high":"高温 30℃","low":"低温 25℃","ymd":"2023-09-19","week":"星期二","sunrise":"05:45","sunset":"17:57","aqi":0,"fx":"南风","fl":"2级","type":"晴","notice":"愿你拥有比阳光明媚的心情"},{"date":"20","high":"高温 30℃","low":"低温 26℃","ymd":"2023-09-20","week":"星期三","sunrise":"05:45","sunset":"17:56","aqi":0,"fx":"南风","fl":"1级","type":"阴","notice":"不要被阴云遮挡住好心情"}]
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:75)] INFO -TaskLog:200
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 06 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:40:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:11:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 07 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:41:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:10:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 08 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:41:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:09:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 09 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:41:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:08:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 10 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:42:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:07:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 11 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:42:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:06:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=3
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 12 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:42:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:05:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 13 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:43:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:04:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Thu Sep 14 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:43:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:02:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=31
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Fri Sep 15 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:43:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:01:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sat Sep 16 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:44:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=18:00:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=28
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=22
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Sun Sep 17 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:44:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:59:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=27
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=24
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Mon Sep 18 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:44:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:58:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=29
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=23
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Tue Sep 19 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:45:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:57:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=2
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=25
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:85)] DEBUG-Create_weatherInfo:物件建立
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertDate(WeatherInfoHandled.java:113)] INFO -updateTimeObj
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:88)] DEBUG-weatherInfo:Date格式轉換=Wed Sep 20 00:00:00 CST 2023
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:90)] DEBUG-weatherInfo:SunriseTime格式轉換=05:45:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:92)] DEBUG-weatherInfo:setSunsetTime格式轉換=17:56:00
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=1
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=30
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.convertStringToNum(WeatherInfoHandled.java:138)] DEBUG-pattern取字串中的數字(包含-號)=26
2023-09-06 14:51:25 [org.hibernate.internal.SessionFactoryImpl$SessionBuilderImpl.openSession(SessionFactoryImpl.java:1261)] TRACE-Opening Hibernate Session.  tenant=null
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.<init>(SessionImpl.java:272)] TRACE-Opened Session [90b4b763-1aed-42b9-bec6-4d971c6ff49a] at timestamp: 1693983085137
2023-09-06 14:51:25 [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] DEBUG-On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:339)] TRACE-Allowing invocation [beginTransaction] to proceed to real (non-transacted) session
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [beginTransaction] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] DEBUG-begin
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:66)] TRACE-Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:68)] TRACE-Transaction begun via JDBC Connection.setAutoCommit(false)
2023-09-06 14:51:25 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterBeginCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:177)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 06 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:40:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:11:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [暴雨]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [关好门窗，外出避开低洼地]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2856
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4041739c]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4041739c]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-06 00:00:00', '05:40:00', 30, 24, '18:11:00', '0', '东北风', 1, '暴雨', '关好门窗，外出避开低洼地')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-06 00:00:00', '05:40:00', 30, 24, '18:11:00', '0', '东北风', 1, '暴雨', '关好门窗，外出避开低洼地')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 07 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:41:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:10:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [西北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2857
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@29a33620]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@29a33620]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-07 00:00:00', '05:41:00', 29, 25, '18:10:00', '0', '西北风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-07 00:00:00', '05:41:00', 29, 25, '18:10:00', '0', '西北风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 08 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:41:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:09:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2858
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6a32191e]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6a32191e]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-08 00:00:00', '05:41:00', 31, 24, '18:09:00', '0', '东北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-08 00:00:00', '05:41:00', 31, 24, '18:09:00', '0', '东北风', 2, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 09 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:41:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:08:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2859
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@285583d4]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@285583d4]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-09 00:00:00', '05:41:00', 30, 25, '18:08:00', '0', '北风', 3, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-09 00:00:00', '05:41:00', 30, 25, '18:08:00', '0', '北风', 3, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 10 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:42:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:07:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2860
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5b202ff]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@5b202ff]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-10 00:00:00', '05:42:00', 31, 24, '18:07:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-10 00:00:00', '05:42:00', 31, 24, '18:07:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 11 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:42:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:06:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [3]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2861
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7186b202]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7186b202]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-11 00:00:00', '05:42:00', 31, 25, '18:06:00', '0', '北风', 3, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-11 00:00:00', '05:42:00', 31, 25, '18:06:00', '0', '北风', 3, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 12 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:42:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:05:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2862
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@72543547]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@72543547]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-12 00:00:00', '05:42:00', 31, 24, '18:05:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-12 00:00:00', '05:42:00', 31, 24, '18:05:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 13 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:43:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:04:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2863
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@73afe2b7]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@73afe2b7]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-13 00:00:00', '05:43:00', 31, 24, '18:04:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-13 00:00:00', '05:43:00', 31, 24, '18:04:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Thu Sep 14 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:43:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [31]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:02:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2864
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6babffb5]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@6babffb5]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-14 00:00:00', '05:43:00', 31, 24, '18:02:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-14 00:00:00', '05:43:00', 31, 24, '18:02:00', '0', '北风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Fri Sep 15 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:43:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:01:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [北风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2865
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4b8137c5]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@4b8137c5]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-15 00:00:00', '05:43:00', 27, 22, '18:01:00', '0', '北风', 1, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-15 00:00:00', '05:43:00', 27, 22, '18:01:00', '0', '北风', 1, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sat Sep 16 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:44:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [28]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [22]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [18:00:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [东风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [小雨]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [雨虽小，注意保暖别感冒]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2866
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@44dc7b7d]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@44dc7b7d]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-16 00:00:00', '05:44:00', 28, 22, '18:00:00', '0', '东风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-16 00:00:00', '05:44:00', 28, 22, '18:00:00', '0', '东风', 1, '小雨', '雨虽小，注意保暖别感冒')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Sun Sep 17 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:44:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [27]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [24]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:59:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [中雨]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [记得随身携带雨伞哦]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2867
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@e29f4f6]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@e29f4f6]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-17 00:00:00', '05:44:00', 27, 24, '17:59:00', '0', '南风', 2, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-17 00:00:00', '05:44:00', 27, 24, '17:59:00', '0', '南风', 2, '中雨', '记得随身携带雨伞哦')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Mon Sep 18 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:44:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [29]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [23]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:58:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [多云]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [阴晴之间，谨防紫外线侵扰]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2868
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@39dec536]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@39dec536]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-18 00:00:00', '05:44:00', 29, 23, '17:58:00', '0', '南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-18 00:00:00', '05:44:00', 29, 23, '17:58:00', '0', '南风', 2, '多云', '阴晴之间，谨防紫外线侵扰')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Tue Sep 19 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:45:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [25]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:57:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [2]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [晴]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [愿你拥有比阳光明媚的心情]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2869
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7364eed1]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@7364eed1]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-19 00:00:00', '05:45:00', 30, 25, '17:57:00', '0', '南风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-19 00:00:00', '05:45:00', 30, 25, '17:57:00', '0', '南风', 2, '晴', '愿你拥有比阳光明媚的心情')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [save] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:165)] TRACE-Saving transient instance
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:167)] TRACE-Saving [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:316)] TRACE-Adding an EntityIdentityInsertAction for [com.eland.weatherData.model.WeatherInfoEntity] object
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:257)] TRACE-Executing inserts before finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:262)] TRACE-Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[com.eland.weatherData.model.WeatherInfoEntity#<null>]]
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:279)] TRACE-Executing insertions before resolved early-insert
2023-09-06 14:51:25 [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] DEBUG-Executing identity-insert immediately
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3117)] TRACE-Inserting entity: com.eland.weatherData.model.WeatherInfoEntity (native id)
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:127)] DEBUG-
    insert 
    into
        weather_info
        (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.register(ResourceRegistryStandardImpl.java:83)] TRACE-Registering statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)]
2023-09-06 14:51:25 [org.hibernate.persister.entity.AbstractEntityPersister.dehydrate(AbstractEntityPersister.java:2923)] TRACE-Dehydrating entity: [com.eland.weatherData.model.WeatherInfoEntity#<null>]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [1] as [VARCHAR] - [台中]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [2] as [TIMESTAMP] - [Wed Sep 20 00:00:00 CST 2023]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [3] as [TIME] - [05:45:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [4] as [INTEGER] - [30]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [5] as [INTEGER] - [26]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [6] as [TIME] - [17:56:00]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [7] as [VARCHAR] - [0]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [8] as [VARCHAR] - [南风]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [9] as [INTEGER] - [1]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [10] as [VARCHAR] - [阴]
2023-09-06 14:51:25 [org.hibernate.type.descriptor.sql.BasicBinder.bind(BasicBinder.java:64)] TRACE-binding parameter [11] as [VARCHAR] - [不要被阴云遮挡住好心情]
2023-09-06 14:51:25 [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] DEBUG-Natively generated identity: 2870
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:118)] TRACE-Releasing result set [com.mysql.cj.jdbc.result.ResultSetImpl@65514add]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:161)] TRACE-Closing result set [com.mysql.cj.jdbc.result.ResultSetImpl@65514add]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:97)] TRACE-Releasing statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-20 00:00:00', '05:45:00', 30, 26, '17:56:00', '0', '南风', 1, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] DEBUG-HHH000387: ResultSet's statement was not registered
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.close(ResourceRegistryStandardImpl.java:177)] TRACE-Closing prepared statement [com.mysql.cj.jdbc.ClientPreparedStatement: insert into weather_info (city, date, sunrise, high, low, sunset, aqi, fx, fl, type, notice) values ('台中', '2023-09-20 00:00:00', '05:45:00', 30, 26, '17:56:00', '0', '南风', 1, '阴', '不要被阴云遮挡住好心情')]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] DEBUG-committing
2023-09-06 14:51:25 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:181)] TRACE-ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2400)] TRACE-SessionImpl#beforeTransactionCompletion()
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:446)] TRACE-Automatically flushing session
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:74)] TRACE-Flushing session
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:139)] DEBUG-Processing flush-time cascades
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:192)] DEBUG-Dirty checking collections
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushEntities(AbstractFlushingEventListener.java:205)] TRACE-Flushing entities and processing referenced collections
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:248)] TRACE-Processing unreferenced collections
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.flushCollections(AbstractFlushingEventListener.java:261)] TRACE-Scheduling collection removes/(re)creates/updates
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] DEBUG-Flushed: 0 insertions, 0 updates, 0 deletions to 15 objects
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:120)] DEBUG-Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] DEBUG-Listing entities:
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 06 00:00:00 CST 2023, sunrise=05:40:00, high=30, fx=东北风, city=台中, low=24, fl=1, sunset=18:11:00, aqi=0, id=2856, type=暴雨, notice=关好门窗，外出避开低洼地}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 07 00:00:00 CST 2023, sunrise=05:41:00, high=29, fx=西北风, city=台中, low=25, fl=1, sunset=18:10:00, aqi=0, id=2857, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 08 00:00:00 CST 2023, sunrise=05:41:00, high=31, fx=东北风, city=台中, low=24, fl=2, sunset=18:09:00, aqi=0, id=2858, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 09 00:00:00 CST 2023, sunrise=05:41:00, high=30, fx=北风, city=台中, low=25, fl=3, sunset=18:08:00, aqi=0, id=2859, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 10 00:00:00 CST 2023, sunrise=05:42:00, high=31, fx=北风, city=台中, low=24, fl=2, sunset=18:07:00, aqi=0, id=2860, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 11 00:00:00 CST 2023, sunrise=05:42:00, high=31, fx=北风, city=台中, low=25, fl=3, sunset=18:06:00, aqi=0, id=2861, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 20 00:00:00 CST 2023, sunrise=05:45:00, high=30, fx=南风, city=台中, low=26, fl=1, sunset=17:56:00, aqi=0, id=2870, type=阴, notice=不要被阴云遮挡住好心情}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 12 00:00:00 CST 2023, sunrise=05:42:00, high=31, fx=北风, city=台中, low=24, fl=2, sunset=18:05:00, aqi=0, id=2862, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Wed Sep 13 00:00:00 CST 2023, sunrise=05:43:00, high=31, fx=北风, city=台中, low=24, fl=2, sunset=18:04:00, aqi=0, id=2863, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Thu Sep 14 00:00:00 CST 2023, sunrise=05:43:00, high=31, fx=北风, city=台中, low=24, fl=2, sunset=18:02:00, aqi=0, id=2864, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Fri Sep 15 00:00:00 CST 2023, sunrise=05:43:00, high=27, fx=北风, city=台中, low=22, fl=1, sunset=18:01:00, aqi=0, id=2865, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sat Sep 16 00:00:00 CST 2023, sunrise=05:44:00, high=28, fx=东风, city=台中, low=22, fl=1, sunset=18:00:00, aqi=0, id=2866, type=小雨, notice=雨虽小，注意保暖别感冒}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Sun Sep 17 00:00:00 CST 2023, sunrise=05:44:00, high=27, fx=南风, city=台中, low=24, fl=2, sunset=17:59:00, aqi=0, id=2867, type=中雨, notice=记得随身携带雨伞哦}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Mon Sep 18 00:00:00 CST 2023, sunrise=05:44:00, high=29, fx=南风, city=台中, low=23, fl=2, sunset=17:58:00, aqi=0, id=2868, type=多云, notice=阴晴之间，谨防紫外线侵扰}
2023-09-06 14:51:25 [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] DEBUG-com.eland.weatherData.model.WeatherInfoEntity{date=Tue Sep 19 00:00:00 CST 2023, sunrise=05:45:00, high=30, fx=南风, city=台中, low=25, fl=2, sunset=17:57:00, aqi=0, id=2869, type=晴, notice=愿你拥有比阳光明媚的心情}
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:333)] TRACE-Executing flush
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.afterStatementExecution(JdbcCoordinatorImpl.java:255)] TRACE-Starting after statement execution processing [AFTER_TRANSACTION]
2023-09-06 14:51:25 [org.hibernate.event.internal.AbstractFlushingEventListener.postFlush(AbstractFlushingEventListener.java:368)] TRACE-Post flush
2023-09-06 14:51:25 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion(SynchronizationRegistryStandardImpl.java:55)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:80)] TRACE-Preparing to commit transaction via JDBC Connection.commit()
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.commit(AbstractLogicalConnectionImplementor.java:83)] TRACE-Transaction committed via JDBC Connection.commit()
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.afterCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:199)] TRACE-ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
2023-09-06 14:51:25 [org.jboss.logging.DelegatingBasicLogger.tracef(DelegatingBasicLogger.java:159)] TRACE-SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
2023-09-06 14:51:25 [org.hibernate.resource.transaction.internal.SynchronizationRegistryStandardImpl.clearSynchronizations(SynchronizationRegistryStandardImpl.java:103)] DEBUG-Clearing local Synchronizations
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.afterTransaction(AbstractLogicalConnectionImplementor.java:53)] TRACE-LogicalConnection#afterTransaction
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:159)] DEBUG-Initiating JDBC connection release from afterTransaction
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.afterTransactionCompletion(SessionImpl.java:2415)] TRACE-SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.managedClose(SessionImpl.java:467)] TRACE-Automatically closing session
2023-09-06 14:51:25 [org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:360)] TRACE-Closing session [90b4b763-1aed-42b9-bec6-4d971c6ff49a]
2023-09-06 14:51:25 [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:166)] TRACE-Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@773014d3]
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.releaseResources(ResourceRegistryStandardImpl.java:317)] TRACE-Releasing JDBC resources
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:233)] TRACE-Closing logical connection
2023-09-06 14:51:25 [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:240)] TRACE-Logical connection closed
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:319)] TRACE-Allowing invocation [isOpen] to proceed to real session
2023-09-06 14:51:25 [org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:350)] TRACE-Allowing proxy invocation [isOpen] to proceed to real session
2023-09-06 14:51:25 [com.eland.weatherData.service.WeatherInfoHandled.weatherInfoConversion(WeatherInfoHandled.java:104)] INFO -insert_weatherInfoList_Finished
2023-09-06 14:51:25 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:33)] DEBUG-Finished weatherInfo Data Conversion
2023-09-06 14:51:25 [com.eland.weatherData.weatherDataAccessMain.main(weatherDataAccessMain.java:35)] DEBUG-Finished work
